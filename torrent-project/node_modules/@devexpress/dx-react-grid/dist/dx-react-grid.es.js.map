{"version":3,"file":"dx-react-grid.es.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/column-chooser.jsx","../src/plugins/filtering-state.jsx","../src/plugins/local-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/local-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/local-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/sorting-state.jsx","../src/plugins/local-sorting.jsx","../src/plugins/drag-drop-context.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table-view.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/virtual-table-utils.js","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/components/group-panel-layout.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Getter, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootTemplate,\n      headerPlaceholderTemplate,\n      footerPlaceholderTemplate,\n    } = this.props;\n\n    return (\n      <PluginContainer>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"header\" />\n        <Template name=\"body\" />\n        <Template name=\"footer\" />\n        <Template name=\"root\">\n          {() => rootTemplate({\n            headerTemplate: () => (\n              <TemplatePlaceholder name=\"header\">\n                {content => (headerPlaceholderTemplate\n                  ? headerPlaceholderTemplate({ children: content })\n                  : content)}\n              </TemplatePlaceholder>\n            ),\n            bodyTemplate: () => <TemplatePlaceholder name=\"body\" />,\n            footerTemplate: () => (\n              <TemplatePlaceholder name=\"footer\">\n                {content => (footerPlaceholderTemplate\n                  ? footerPlaceholderTemplate({ children: content })\n                  : content)}\n              </TemplatePlaceholder>\n            ),\n          })}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootTemplate: PropTypes.func.isRequired,\n  headerPlaceholderTemplate: PropTypes.func,\n  footerPlaceholderTemplate: PropTypes.func,\n};\n\nGridCore.defaultProps = {\n  getRowId: null,\n  getCellValue: null,\n  headerPlaceholderTemplate: null,\n  footerPlaceholderTemplate: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootTemplate,\n  headerPlaceholderTemplate,\n  footerPlaceholderTemplate,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootTemplate={rootTemplate}\n      headerPlaceholderTemplate={headerPlaceholderTemplate}\n      footerPlaceholderTemplate={footerPlaceholderTemplate}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootTemplate: PropTypes.func.isRequired,\n  headerPlaceholderTemplate: PropTypes.func,\n  footerPlaceholderTemplate: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nGrid.defaultProps = {\n  getRowId: null,\n  getCellValue: null,\n  headerPlaceholderTemplate: null,\n  footerPlaceholderTemplate: null,\n  children: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { columnChooserItems, toggleColumn } from '@devexpress/dx-grid-core';\nimport {\n  TemplateRenderer,\n} from '@devexpress/dx-react-core';\n\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { onHiddenColumnsChange } = props;\n\n    this.handleColumnToggle = (columnName) => {\n      if (!onHiddenColumnsChange) return;\n\n      const { hiddenColumns } = this.props;\n      const nextHiddenColumnNames = toggleColumn(hiddenColumns, columnName);\n      onHiddenColumnsChange(nextHiddenColumnNames);\n    };\n  }\n  render() {\n    const {\n      columns, hiddenColumns, containerTemplate, itemTemplate,\n    } = this.props;\n    const items = columnChooserItems(columns, hiddenColumns);\n    const handleItemToggle = item => this.handleColumnToggle(item.column.name);\n\n    return (\n      <TemplateRenderer\n        template={containerTemplate}\n        params={{\n          items,\n          onItemToggle: handleItemToggle,\n        }}\n      >\n        {items.map(item => (\n          <TemplateRenderer\n            key={item.column.name}\n            template={itemTemplate}\n            params={{\n              item,\n              onToggle: () => handleItemToggle(item),\n            }}\n          />\n        ))}\n      </TemplateRenderer>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hiddenColumns: PropTypes.arrayOf(PropTypes.string),\n  onHiddenColumnsChange: PropTypes.func,\n  containerTemplate: PropTypes.func.isRequired,\n  itemTemplate: PropTypes.func.isRequired,\n};\n\nColumnChooser.defaultProps = {\n  hiddenColumns: [],\n  onHiddenColumnsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setColumnFilter } from '@devexpress/dx-grid-core';\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.defaultFilters || [],\n    };\n\n    this.setColumnFilter = (filters, { columnName, config }) => {\n      const { onFiltersChange } = this.props;\n      const nextFilters = setColumnFilter(filters, { columnName, config });\n      this.setState({ filters: nextFilters });\n      if (onFiltersChange) {\n        onFiltersChange(nextFilters);\n      }\n    };\n  }\n  render() {\n    const filters = this.props.filters || this.state.filters;\n\n    return (\n      <PluginContainer\n        pluginName=\"FilteringState\"\n      >\n        <Action\n          name=\"setColumnFilter\"\n          action={({ columnName, config }) =>\n            this.setColumnFilter(filters, { columnName, config })\n          }\n        />\n\n        <Getter name=\"filters\" value={filters} />\n      </PluginContainer>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: undefined,\n  onFiltersChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport { filteredRows } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'FilteringState' },\n];\n\nexport class LocalFiltering extends React.PureComponent {\n  render() {\n    const { getColumnPredicate } = this.props;\n\n    const rowsComputed = ({\n      rows,\n      filters,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) =>\n      filteredRows(rows, filters, getCellValue, getColumnPredicate, isGroupRow, getRowLevelKey);\n\n    return (\n      <PluginContainer\n        pluginName=\"LocalFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nLocalFiltering.propTypes = {\n  getColumnPredicate: PropTypes.func,\n};\n\nLocalFiltering.defaultProps = {\n  getColumnPredicate: undefined,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  startEditRows,\n  stopEditRows,\n\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n  computedCreateRowChange,\n\n  deleteRows,\n  cancelDeletedRows,\n} from '@devexpress/dx-grid-core';\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingRows: props.defaultEditingRows || [],\n      addedRows: props.defaultAddedRows || [],\n      changedRows: props.defaultChangedRows || {},\n      deletedRows: props.defaultDeletedRows || [],\n    };\n\n    this.reduceEditingRows = reducer => (editingRows, payload) => {\n      const { onEditingRowsChange } = this.props;\n      const nextEditingRows = reducer(editingRows, payload);\n      this.setState({ editingRows: nextEditingRows });\n      if (onEditingRowsChange) {\n        onEditingRowsChange(nextEditingRows);\n      }\n    };\n    this.reduceChangedRows = reducer => (changedRows, payload) => {\n      const { onChangedRowsChange } = this.props;\n      const nextChangedRows = reducer(changedRows, payload);\n      this.setState({ changedRows: nextChangedRows });\n      if (onChangedRowsChange) {\n        onChangedRowsChange(nextChangedRows);\n      }\n    };\n    this.reduceAddedRows = reducer => (addedRows, payload) => {\n      const { onAddedRowsChange } = this.props;\n      const nextAddedRows = reducer(addedRows, payload);\n      this.setState({ addedRows: nextAddedRows });\n      if (onAddedRowsChange) {\n        onAddedRowsChange(nextAddedRows);\n      }\n    };\n    this.reduceDeletedRows = reducer => (deletedRows, payload) => {\n      const { onDeletedRowsChange } = this.props;\n      const nextDeletedRows = reducer(deletedRows, payload);\n      this.setState({ deletedRows: nextDeletedRows });\n      if (onDeletedRowsChange) {\n        onDeletedRowsChange(nextDeletedRows);\n      }\n    };\n\n    this.startEditRows = this.reduceEditingRows(startEditRows);\n    this.stopEditRows = this.reduceEditingRows(stopEditRows);\n\n    this.changeRow = this.reduceChangedRows(changeRow);\n    this.cancelChangedRows = this.reduceChangedRows(cancelChanges);\n\n    this.addRow = this.reduceAddedRows(addRow);\n    this.changeAddedRow = this.reduceAddedRows(changeAddedRow);\n    this.cancelAddedRows = this.reduceAddedRows(cancelAddedRows);\n\n    this.deleteRows = this.reduceDeletedRows(deleteRows);\n    this.cancelDeletedRows = this.reduceDeletedRows(cancelDeletedRows);\n\n    this.commitAddedRows = (addedRows, { rowIds }) => {\n      const toCommit = addedRowsByIds(addedRows, rowIds);\n      const changeSet = { added: toCommit };\n      this.commitChanges(changeSet);\n      this.cancelAddedRows(addedRows, { rowIds });\n    };\n    this.commitChangedRows = (changedRows, { rowIds }) => {\n      const toCommit = changedRowsByIds(changedRows, rowIds);\n      const changeSet = { changed: toCommit };\n      this.commitChanges(changeSet);\n      this.cancelChangedRows(changedRows, { rowIds });\n    };\n    this.commitDeletedRows = (deletedRows, { rowIds }) => {\n      const changeSet = { deleted: rowIds };\n      this.commitChanges(changeSet);\n      this.cancelDeletedRows(deletedRows, { rowIds });\n    };\n\n    this.commitChanges = (changeSet) => {\n      const { onCommitChanges } = this.props;\n      if (onCommitChanges) {\n        onCommitChanges(changeSet);\n      }\n    };\n\n    this.createRowChangeComputed = ({ columns }) => computedCreateRowChange(columns);\n  }\n  render() {\n    const editingRows = this.props.editingRows || this.state.editingRows;\n    const changedRows = this.props.changedRows || this.state.changedRows;\n    const addedRows = this.props.addedRows || this.state.addedRows;\n    const deletedRows = this.props.deletedRows || this.state.deletedRows;\n    const { createRowChange } = this.props;\n\n    return (\n      <PluginContainer\n        pluginName=\"EditingState\"\n      >\n        <Action\n          name=\"startEditRows\"\n          action={({ rowIds }) => this.startEditRows(editingRows, { rowIds })}\n        />\n        <Action\n          name=\"stopEditRows\"\n          action={({ rowIds }) => this.stopEditRows(editingRows, { rowIds })}\n        />\n\n        <Action\n          name=\"addRow\"\n          action={() => this.addRow(addedRows, { row: {} })}\n        />\n        <Action\n          name=\"changeAddedRow\"\n          action={({ rowId, change }) => this.changeAddedRow(addedRows, { rowId, change })}\n        />\n        <Action\n          name=\"cancelAddedRows\"\n          action={({ rowIds }) => this.cancelAddedRows(addedRows, { rowIds })}\n        />\n        <Action\n          name=\"commitAddedRows\"\n          action={({ rowIds }) => this.commitAddedRows(addedRows, { rowIds })}\n        />\n\n        <Action\n          name=\"changeRow\"\n          action={({ rowId, change }) => this.changeRow(changedRows, { rowId, change })}\n        />\n        <Action\n          name=\"cancelChangedRows\"\n          action={({ rowIds }) => this.cancelChangedRows(changedRows, { rowIds })}\n        />\n        <Action\n          name=\"commitChangedRows\"\n          action={({ rowIds }) => this.commitChangedRows(changedRows, { rowIds })}\n        />\n\n        <Action\n          name=\"deleteRows\"\n          action={({ rowIds }) => this.deleteRows(deletedRows, { rowIds })}\n        />\n        <Action\n          name=\"cancelDeletedRows\"\n          action={({ rowIds }) => this.cancelDeletedRows(deletedRows, { rowIds })}\n        />\n        <Action\n          name=\"commitDeletedRows\"\n          action={({ rowIds }) => this.commitDeletedRows(deletedRows, { rowIds })}\n        />\n\n        <Getter name=\"editingRows\" value={editingRows} />\n        <Getter name=\"changedRows\" value={changedRows} />\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Getter name=\"deletedRows\" value={deletedRows} />\n        <Getter\n          name=\"createRowChange\"\n          computed={createRowChange ?\n            () => createRowChange :\n            this.createRowChangeComputed\n          }\n        />\n      </PluginContainer>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  editingRows: PropTypes.array,\n  defaultEditingRows: PropTypes.array,\n  onEditingRowsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  changedRows: PropTypes.object,\n  defaultChangedRows: PropTypes.object,\n  onChangedRowsChange: PropTypes.func,\n  createRowChange: PropTypes.func,\n\n  deletedRows: PropTypes.array,\n  defaultDeletedRows: PropTypes.array,\n  onDeletedRowsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  editingRows: undefined,\n  defaultEditingRows: undefined,\n  onEditingRowsChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: undefined,\n  onAddedRowsChange: undefined,\n\n  deletedRows: undefined,\n  defaultDeletedRows: undefined,\n  onDeletedRowsChange: undefined,\n\n  changedRows: undefined,\n  defaultChangedRows: undefined,\n  onChangedRowsChange: undefined,\n  createRowChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.defaultCurrentPage,\n      pageSize: props.defaultPageSize,\n    };\n\n    this.setCurrentPage = (page) => {\n      const { onCurrentPageChange } = this.props;\n      const currentPage = setCurrentPage(this.state.currentPage, page);\n      this.setState({ currentPage });\n      if (onCurrentPageChange) {\n        onCurrentPageChange(currentPage);\n      }\n    };\n\n    this.setPageSize = (size) => {\n      const { onPageSizeChange } = this.props;\n      const pageSize = setPageSize(this.state.pageSize, size);\n      this.setState({ pageSize });\n      if (onPageSizeChange) {\n        onPageSizeChange(pageSize);\n      }\n    };\n  }\n  render() {\n    const {\n      pageSize = this.state.pageSize,\n      currentPage = this.state.currentPage,\n      totalCount,\n    } = this.props;\n\n    return (\n      <PluginContainer\n        pluginName=\"PagingState\"\n      >\n        <Action name=\"setCurrentPage\" action={page => this.setCurrentPage(page)} />\n        <Action name=\"setPageSize\" action={size => this.setPageSize(size)} />\n\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Getter name=\"totalCount\" value={totalCount} />\n      </PluginContainer>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n  totalCount: PropTypes.number,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n  totalCount: 0,\n};\n","import React from 'react';\nimport { Getter, Watcher, PluginContainer } from '@devexpress/dx-react-core';\nimport { paginatedRows, rowsWithPageHeaders, pageCount, rowCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'PagingState' },\n];\n\nconst rowsWithHeadersComputed = ({ rows, pageSize, getRowLevelKey }) =>\n  rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = ({ rows, pageSize, currentPage }) =>\n  paginatedRows(rows, pageSize, currentPage);\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class LocalPaging extends React.PureComponent {\n  render() {\n    return (\n      <PluginContainer\n        pluginName=\"LocalPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Watcher\n          watch={getter => [\n            getter('totalCount'),\n            getter('currentPage'),\n            getter('pageSize'),\n          ]}\n          onChange={(action, totalCount, currentPage, pageSize) => {\n            const totalPages = pageCount(totalCount, pageSize);\n            if (totalPages - 1 < currentPage) {\n              action('setCurrentPage')(Math.max(totalPages - 1, 0));\n            }\n          }}\n        />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupByColumn,\n  toggleExpandedGroups,\n  draftGrouping,\n  draftGroupingChange,\n  cancelGroupingChange,\n} from '@devexpress/dx-grid-core';\n\nconst dependencies = [\n  { pluginName: 'SortingState', optional: true },\n];\n\nconst adjustSortIndex = (sortIndex, grouping, sorting) =>\n  Math.max(\n    grouping.slice(0, sortIndex).reduce(\n      (acc, columnGrouping) => {\n        const columnSortingIndex = sorting.findIndex(columnSorting =>\n          columnSorting.columnName === columnGrouping.columnName);\n        return (columnSortingIndex === -1 ? acc - 1 : acc);\n      },\n      sortIndex,\n    ),\n    0,\n  );\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.defaultGrouping,\n      groupingChange: null,\n      expandedGroups: props.defaultExpandedGroups,\n    };\n\n    this.groupByColumn = this.groupByColumn.bind(this);\n    this.toggleGroupExpanded = this.applyReducer.bind(this, toggleExpandedGroups);\n    this.draftGroupingChange = this.applyReducer.bind(this, draftGroupingChange);\n    this.cancelGroupingChange = this.applyReducer.bind(this, cancelGroupingChange);\n    this.setColumnSorting = this.setColumnSorting.bind(this);\n  }\n  getState() {\n    return {\n      ...this.state,\n      grouping: this.props.grouping || this.state.grouping,\n      expandedGroups: this.props.expandedGroups || this.state.expandedGroups,\n    };\n  }\n  setColumnSorting({ columnName, keepOther, ...restParams }, { sorting }, { setColumnSorting }) {\n    const { grouping } = this.getState();\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      setColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    setColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n  groupByColumn({ columnName, groupIndex }, { sorting }, { setColumnSorting }) {\n    const { grouping: prevGrouping } = this.state;\n    const { grouping } = this.applyReducer(groupByColumn, { columnName, groupIndex });\n\n    if (!sorting) return;\n\n    const columnSortingIndex = sorting\n      .findIndex(columnSorting => columnSorting.columnName === columnName);\n    const prevGroupingIndex = prevGrouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n    if (columnSortingIndex === -1\n      || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n    const sortIndex = adjustSortIndex(\n      groupingIndex === -1 ? grouping.length : groupingIndex,\n      grouping,\n      sorting,\n    );\n\n    if (columnSortingIndex === sortIndex) return;\n\n    setColumnSorting({\n      keepOther: true,\n      sortIndex,\n      ...sorting[columnSortingIndex],\n    });\n  }\n  applyReducer(reduce, payload) {\n    const prevState = this.getState();\n    const statePart = reduce(prevState, payload);\n    this.setState(statePart);\n    const state = { ...prevState, ...statePart };\n\n    const { grouping } = state;\n    const { onGroupingChange } = this.props;\n    if (onGroupingChange && grouping !== prevState.grouping) {\n      onGroupingChange(grouping);\n    }\n\n    const { expandedGroups } = state;\n    const { onExpandedGroupsChange } = this.props;\n    if (onExpandedGroupsChange && expandedGroups !== prevState.expandedGroups) {\n      onExpandedGroupsChange(expandedGroups);\n    }\n\n    return state;\n  }\n  render() {\n    const { grouping, groupingChange, expandedGroups } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping(grouping, groupingChange)} />\n        <Getter name=\"expandedGroups\" value={new Set(expandedGroups)} />\n\n        <Action name=\"groupByColumn\" action={this.groupByColumn} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n        <Action name=\"draftGroupingChange\" action={this.draftGroupingChange} />\n        <Action name=\"cancelGroupingChange\" action={this.cancelGroupingChange} />\n\n        <Action name=\"setColumnSorting\" action={this.setColumnSorting} />\n      </PluginContainer>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class LocalGrouping extends React.PureComponent {\n  render() {\n    const { getColumnIdentity } = this.props;\n\n    const groupedRowsComputed = ({ rows, grouping, getCellValue }) =>\n      groupedRows(rows, grouping, getCellValue, getColumnIdentity);\n\n    return (\n      <PluginContainer\n        pluginName=\"LocalGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nLocalGrouping.propTypes = {\n  getColumnIdentity: PropTypes.func,\n};\n\nLocalGrouping.defaultProps = {\n  getColumnIdentity: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) =>\n  customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = ({ rows, grouping }) =>\n      customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <PluginContainer\n        pluginName=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={new Set(appliedExpandedGroups)} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  setRowsSelection,\n  getAvailableSelection,\n  getAvailableToSelect,\n} from '@devexpress/dx-grid-core';\n\nconst availableToSelectComputed = ({ rows, getRowId, isGroupRow }) =>\n  getAvailableToSelect(rows, getRowId, isGroupRow);\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.defaultSelection || [],\n    };\n\n    this.changeSelection = (selection) => {\n      const { onSelectionChange } = this.props;\n      this.setState({ selection });\n      if (onSelectionChange) {\n        onSelectionChange(selection);\n      }\n    };\n  }\n  render() {\n    const selection = this.props.selection || this.state.selection;\n\n    const selectionComputed = ({ availableToSelect }) =>\n      getAvailableSelection(selection, availableToSelect);\n\n    return (\n      <PluginContainer\n        pluginName=\"SelectionState\"\n      >\n        <Action\n          name=\"setRowsSelection\"\n          action={({ rowIds, selected }) => {\n            this.changeSelection(setRowsSelection(selection, { rowIds, selected }));\n          }}\n        />\n\n        <Getter name=\"availableToSelect\" computed={availableToSelectComputed} />\n        <Getter name=\"selection\" computed={selectionComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: undefined,\n  onSelectionChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setColumnSorting } from '@devexpress/dx-grid-core';\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.defaultSorting,\n    };\n\n    this.setColumnSorting = this.applyReducer.bind(this, setColumnSorting);\n  }\n  getState() {\n    return {\n      sorting: this.props.sorting || this.state.sorting,\n    };\n  }\n  applyReducer(reduce, payload) {\n    const prevState = this.getState();\n    const statePart = reduce(prevState, payload);\n    this.setState(statePart);\n    const state = { ...prevState, ...statePart };\n\n    const { sorting } = state;\n    const { onSortingChange } = this.props;\n    if (onSortingChange && sorting !== prevState.sorting) {\n      onSortingChange(sorting);\n    }\n  }\n  render() {\n    const { sorting } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Action name=\"setColumnSorting\" action={this.setColumnSorting} />\n      </PluginContainer>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport { sortedRows } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'SortingState' },\n];\n\nexport class LocalSorting extends React.PureComponent {\n  render() {\n    const { getColumnCompare } = this.props;\n    const rowsComputed = ({\n      rows,\n      sorting,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) =>\n      sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <PluginContainer\n        pluginName=\"LocalSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nLocalSorting.propTypes = {\n  getColumnCompare: PropTypes.func,\n};\n\nLocalSorting.defaultProps = {\n  getColumnCompare: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PluginContainer, Template, TemplatePlaceholder,\n  TemplateConnector, TemplateRenderer,\n  DragDropContext as DragDropContextCore,\n} from '@devexpress/dx-react-core';\n\nconst getContainerTemplateArgs = (\n  { payload, clientOffset, columnTemplate },\n  { columns },\n) => ({\n  clientOffset,\n  columns: payload\n    .filter(item => item.type === 'column')\n    .map(item => columns.find(column => column.name === item.columnName)),\n  columnTemplate,\n});\n\nexport class DragDropContext extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n  render() {\n    const {\n      containerTemplate,\n      columnTemplate,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <PluginContainer\n        pluginName=\"DragDropContext\"\n      >\n        <Template name=\"root\">\n          <div>\n            <DragDropContextCore\n              onChange={this.change}\n            >\n              <TemplatePlaceholder />\n            </DragDropContextCore>\n            {payload && (\n              <TemplateConnector>\n                {getters => (\n                  <TemplateRenderer\n                    template={containerTemplate}\n                    params={getContainerTemplateArgs(\n                      { payload, clientOffset, columnTemplate },\n                      getters,\n                    )}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </div>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nDragDropContext.propTypes = {\n  containerTemplate: PropTypes.func.isRequired,\n  columnTemplate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  PluginContainer,\n  Template,\n  TemplatePlaceholder,\n  TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'TableView' },\n];\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n  tableHeaderRowsWithReordering(tableHeaderRows);\n\nexport class TableColumnReordering extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder || props.order,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n  getState() {\n    const { state } = this;\n    const { order = state.order } = this.props;\n    return { ...state, order };\n  }\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n  getCellDimensions() {\n    return this.getAvailableColumns()\n      .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n  storeCellDimensionsGetter(tableColumn, data) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = data;\n    }\n  }\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    const cellDimensions = this.getCellDimensions();\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n  }\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n  }\n  render() {\n    const {\n      tableContainerTemplate,\n      reorderingRowTemplate,\n      reorderingCellTemplate,\n    } = this.props;\n    const columnsComputed = ({ tableColumns }) =>\n      orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"tableView\">\n          {params => (\n            <TemplateRenderer\n              template={tableContainerTemplate}\n              params={{\n                ...params,\n                onOver: this.onOver,\n                onLeave: this.onLeave,\n                onDrop: this.onDrop,\n              }}\n            >\n              <TemplatePlaceholder />\n            </TemplateRenderer>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <TemplateRenderer\n              template={reorderingRowTemplate}\n              params={params}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {(params) => {\n            const cellDimensionsGetter = fn =>\n              this.storeCellDimensionsGetter(params.tableColumn, fn);\n            return (\n              <TemplateRenderer\n                template={reorderingCellTemplate}\n                params={{\n                  ...params,\n                  getCellDimensions: cellDimensionsGetter,\n                }}\n              />\n            );\n          }}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnReordering.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerTemplate: PropTypes.func.isRequired,\n  reorderingRowTemplate: PropTypes.func.isRequired,\n  reorderingCellTemplate: PropTypes.func.isRequired,\n};\n\nTableColumnReordering.defaultProps = {\n  order: undefined,\n  defaultOrder: undefined,\n  onOrderChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  TemplateRenderer,\n  PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  isNoDataTableRow,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst getTableLayoutTemplateArgs = (\n  { rowTemplate, cellTemplate },\n  { tableHeaderRows, tableBodyRows, tableColumns },\n) => ({\n  headerRows: tableHeaderRows,\n  bodyRows: tableBodyRows,\n  columns: tableColumns,\n  rowTemplate,\n  cellTemplate,\n});\n\nconst getDataTableCellTemplateArgs = (\n  params,\n  { getCellValue },\n) => ({\n  ...params,\n  row: params.tableRow.row,\n  column: params.tableColumn.column,\n  value: getCellValue(params.tableRow.row, params.tableColumn.column.name),\n});\n\nconst getValueFormatterArgs = params => ({\n  row: params.row,\n  column: params.column,\n  value: params.value,\n});\n\nconst getDataTableRowTemplateArgs = params => ({\n  ...params,\n  row: params.tableRow.row,\n});\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) =>\n  tableRowsWithDataRows(rows, getRowId);\nconst tableColumnsComputed = ({ columns }) => tableColumnsWithDataRows(columns);\n\nconst cellTemplate = params =>\n  <TemplatePlaceholder name=\"tableViewCell\" params={params} />;\nconst rowTemplate = params =>\n  <TemplatePlaceholder name=\"tableViewRow\" params={params} />;\n\nexport class TableView extends React.PureComponent {\n  render() {\n    const {\n      tableLayoutTemplate,\n      tableCellTemplate,\n      tableRowTemplate,\n      tableNoDataRowTemplate,\n      tableNoDataCellTemplate,\n      tableStubCellTemplate,\n      tableStubHeaderCellTemplate,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableView\"\n        dependencies={[\n          { pluginName: 'DataTypeProvider', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"tableView\" />\n        </Template>\n        <Template name=\"tableView\">\n          <TemplateConnector>\n            {(getters, actions) => (\n              <TemplateRenderer\n                template={tableLayoutTemplate}\n                params={getTableLayoutTemplateArgs(\n                  { rowTemplate, cellTemplate },\n                  getters,\n                  actions,\n                )}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableViewCell\">\n          {params => (\n            <TemplateConnector>\n              {({ tableHeaderRows: headerRows }) =>\n                (isHeaderStubTableCell(params.tableRow, headerRows) ? (\n                  <TemplateRenderer\n                    template={tableStubHeaderCellTemplate}\n                    params={params}\n                  />\n                ) : (\n                  <TemplateRenderer\n                    template={tableStubCellTemplate}\n                    params={params}\n                  />\n                ))\n              }\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters) => {\n                const templateArgs = getDataTableCellTemplateArgs(params, getters);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={getValueFormatterArgs(templateArgs)}\n                  >\n                    {content => (\n                      <TemplateRenderer\n                        template={tableCellTemplate}\n                        params={templateArgs}\n                      >\n                        {content}\n                      </TemplateRenderer>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={tableNoDataCellTemplate}\n              params={{\n                getMessage,\n                ...params,\n              }}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {() => (\n                <TemplateRenderer\n                  template={tableRowTemplate}\n                  params={getDataTableRowTemplateArgs(params)}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={tableNoDataRowTemplate}\n              params={params}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableView.propTypes = {\n  tableLayoutTemplate: PropTypes.func.isRequired,\n  tableCellTemplate: PropTypes.func.isRequired,\n  tableRowTemplate: PropTypes.func.isRequired,\n  tableNoDataCellTemplate: PropTypes.func.isRequired,\n  tableNoDataRowTemplate: PropTypes.func.isRequired,\n  tableStubCellTemplate: PropTypes.func.isRequired,\n  tableStubHeaderCellTemplate: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableView.defaultProps = {\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst getSelectTableCellTemplateArgs = (\n  params,\n  { selection },\n  { setRowsSelection },\n) => ({\n  ...params,\n  row: params.tableRow.row,\n  selected: selection.indexOf(params.tableRow.rowId) > -1,\n  changeSelected: () => setRowsSelection({ rowIds: [params.tableRow.rowId] }),\n});\n\nconst getSelectAllTableCellTemplateArgs = (\n  params,\n  { availableToSelect, selection },\n  { setRowsSelection },\n) => ({\n  ...params,\n  selectionAvailable: !!availableToSelect.length,\n  allSelected: selection.length === availableToSelect.length && selection.length !== 0,\n  someSelected: selection.length !== availableToSelect.length && selection.length !== 0,\n  toggleAll: () => setRowsSelection({ rowIds: availableToSelect }),\n});\n\nconst getSelectTableRowTemplateArgs = (\n  { selectByRowClick, highlightSelected, ...restParams },\n  { selection },\n  { setRowsSelection },\n) => {\n  const { rowId } = restParams.tableRow;\n  return ({\n    ...restParams,\n    selectByRowClick,\n    selected: highlightSelected && selection.indexOf(rowId) > -1,\n    changeSelected: () => setRowsSelection({ rowIds: [rowId] }),\n  });\n};\n\nconst pluginDependencies = [\n  { pluginName: 'SelectionState' },\n  { pluginName: 'TableView' },\n];\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightSelected,\n      showSelectionColumn,\n      showSelectAll,\n      selectionColumnWidth,\n      selectAllCellTemplate,\n      selectCellTemplate,\n      selectRowTemplate,\n      selectByRowClick,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableSelection\"\n        dependencies={pluginDependencies}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableViewCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {(getters, actions) => (\n                  <TemplateRenderer\n                    template={selectAllCellTemplate}\n                    params={getSelectAllTableCellTemplateArgs(params, getters, actions)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableViewCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {(getters, actions) => (\n                  <TemplateRenderer\n                    template={selectCellTemplate}\n                    params={getSelectTableCellTemplateArgs(params, getters, actions)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightSelected || selectByRowClick) && (\n          <Template\n            name=\"tableViewRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {(getters, actions) => (\n                  <TemplateRenderer\n                    template={selectRowTemplate}\n                    params={\n                      getSelectTableRowTemplateArgs({\n                        selectByRowClick,\n                        highlightSelected,\n                        ...params,\n                      }, getters, actions)\n                    }\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </PluginContainer>\n    );\n  }\n}\n\nTableSelection.propTypes = {\n  selectAllCellTemplate: PropTypes.func.isRequired,\n  selectCellTemplate: PropTypes.func.isRequired,\n  selectRowTemplate: PropTypes.func.isRequired,\n  highlightSelected: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightSelected: false,\n  selectByRowClick: false,\n  showSelectAll: true,\n  showSelectionColumn: true,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setDetailRowExpanded } from '@devexpress/dx-grid-core';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRows: props.defaultExpandedRows || [],\n    };\n\n    this.setDetailRowExpanded = ({ rowId }) => {\n      const prevExpandedDetails = this.props.expandedRows || this.state.expandedRows;\n      const expandedRows = setDetailRowExpanded(prevExpandedDetails, { rowId });\n      const { onExpandedRowsChange } = this.props;\n      this.setState({ expandedRows });\n      if (onExpandedRowsChange) {\n        onExpandedRowsChange(expandedRows);\n      }\n    };\n  }\n\n  render() {\n    const expandedRows = this.props.expandedRows || this.state.expandedRows;\n    return (\n      <PluginContainer\n        pluginName=\"RowDetailState\"\n      >\n        <Action\n          name=\"setDetailRowExpanded\"\n          action={({ rowId }) => this.setDetailRowExpanded({ rowId })}\n        />\n\n        <Getter name=\"expandedRows\" value={expandedRows} />\n      </PluginContainer>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRows: PropTypes.array,\n  defaultExpandedRows: PropTypes.array,\n  onExpandedRowsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRows: undefined,\n  defaultExpandedRows: undefined,\n  onExpandedRowsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst getDetailToggleTableCellTemplateArgs = (\n  params,\n  { expandedRows },\n  { setDetailRowExpanded },\n) => ({\n  ...params,\n  row: params.tableRow.row,\n  expanded: isDetailRowExpanded(expandedRows, params.tableRow.rowId),\n  toggleExpanded: () => setDetailRowExpanded({ rowId: params.tableRow.rowId }),\n});\n\nconst getDetailTableCellTemplateArgs = ({ template, ...params }) => ({\n  ...params,\n  row: params.tableRow.row,\n  template: () => template({ row: params.tableRow.row }),\n});\n\nconst getDetailTableRowTemplateArgs = params => ({\n  ...params,\n  row: params.tableRow.row,\n});\n\nconst pluginDependencies = [\n  { pluginName: 'TableView' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      template,\n      detailToggleCellTemplate,\n      detailCellTemplate,\n      detailRowTemplate,\n      detailToggleCellWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithDetail(tableColumns, detailToggleCellWidth);\n    const tableBodyRowsComputed = ({ tableBodyRows, expandedRows }) =>\n      tableRowsWithExpandedDetail(tableBodyRows, expandedRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={detailToggleCellTemplate}\n                  params={getDetailToggleTableCellTemplateArgs(params, getters, actions)}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={detailCellTemplate}\n              params={getDetailTableCellTemplateArgs({ template, ...params })}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {() => (\n                <TemplateRenderer\n                  template={detailRowTemplate}\n                  params={getDetailTableRowTemplateArgs(params)}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableRowDetail.propTypes = {\n  template: PropTypes.func,\n  detailToggleCellTemplate: PropTypes.func.isRequired,\n  detailCellTemplate: PropTypes.func.isRequired,\n  detailRowTemplate: PropTypes.func.isRequired,\n  detailToggleCellWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  template: undefined,\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  PluginContainer,\n  TemplatePlaceholder,\n  TemplateConnector,\n  TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst getGroupIndentTableCellTemplateArgs = ({ params }) => ({\n  ...params,\n  row: params.tableRow.row,\n  column: params.tableColumn.column,\n});\n\nconst getGroupTableCellTemplateArgs = (\n  params,\n  { expandedGroups },\n  { toggleGroupExpanded },\n) => {\n  const { compoundKey } = params.tableRow.row;\n  return {\n    ...params,\n    row: params.tableRow.row,\n    column: params.tableColumn.column,\n    isExpanded: expandedGroups.has(compoundKey),\n    toggleGroupExpanded: () => toggleGroupExpanded({ groupKey: compoundKey }),\n  };\n};\n\nconst getValueFormatterArgs = params => ({\n  column: params.column,\n  value: params.row.value,\n});\n\nconst getGroupTableRowTemplateArgs = params => ({\n  ...params,\n  row: params.tableRow.row,\n});\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n  { pluginName: 'TableView' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = ({ tableBodyRows, isGroupRow }) =>\n  tableRowsWithGrouping(tableBodyRows, isGroupRow);\n\nconst createShowWhenGrouped = (columns) => {\n  const cache = columns.reduce((acc, column) => {\n    acc[column.name] = column.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => cache[columnName] || false;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      groupCellTemplate,\n      groupRowTemplate,\n      groupIndentCellTemplate,\n      groupIndentColumnWidth,\n      showColumnWhenGrouped,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) =>\n      tableColumnsWithGrouping(\n        tableColumns,\n        grouping,\n        draftGrouping,\n        groupIndentColumnWidth,\n        showColumnWhenGrouped || createShowWhenGrouped(columns),\n      );\n\n    return (\n      <PluginContainer\n        pluginName=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const templateArgs = getGroupTableCellTemplateArgs(params, getters, actions);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={getValueFormatterArgs(templateArgs)}\n                  >\n                    {content => (\n                      <TemplateRenderer\n                        template={groupCellTemplate}\n                        params={templateArgs}\n                      >\n                        {content}\n                      </TemplateRenderer>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        {groupIndentCellTemplate && (\n          <Template\n            name=\"tableViewCell\"\n            predicate={({ tableRow, tableColumn }) => isGroupIndentTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateRenderer\n                template={groupIndentCellTemplate}\n                params={getGroupIndentTableCellTemplateArgs({ params })}\n              />\n            )}\n          </Template>\n        )}\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={groupRowTemplate}\n              params={getGroupTableRowTemplateArgs(params)}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableGroupRow.propTypes = {\n  groupCellTemplate: PropTypes.func.isRequired,\n  groupRowTemplate: PropTypes.func.isRequired,\n  groupIndentCellTemplate: PropTypes.func,\n  groupIndentColumnWidth: PropTypes.number.isRequired,\n  showColumnWhenGrouped: PropTypes.func,\n};\n\nTableGroupRow.defaultProps = {\n  groupIndentCellTemplate: null,\n  showColumnWhenGrouped: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst getHeaderTableCellTemplateArgs = (\n  {\n    allowSorting, allowDragging, allowGroupingByClick, allowResizing, getMessage, ...params\n  },\n  { sorting, columns, grouping },\n  {\n    setColumnSorting, groupByColumn, changeTableColumnWidths, changeDraftTableColumnWidths,\n  },\n) => {\n  const { column } = params.tableColumn;\n  const groupingSupported = grouping !== undefined &&\n      grouping.length < columns.length - 1;\n\n  const result = {\n    ...params,\n    getMessage,\n    allowSorting: allowSorting && sorting !== undefined,\n    allowGroupingByClick: allowGroupingByClick && groupingSupported,\n    allowDragging: allowDragging && (!grouping || groupingSupported),\n    allowResizing,\n    column: params.tableColumn.column,\n    changeSortingDirection: ({ keepOther, cancel }) =>\n      setColumnSorting({ columnName: column.name, keepOther, cancel }),\n    groupByColumn: () =>\n      groupByColumn({ columnName: column.name }),\n    changeColumnWidth: ({ shift }) =>\n      changeTableColumnWidths({ shifts: { [column.name]: shift } }),\n    changeDraftColumnWidth: ({ shift }) =>\n      changeDraftTableColumnWidths({ shifts: { [column.name]: shift } }),\n  };\n\n  if (result.allowSorting) {\n    result.sortingDirection = getColumnSortingDirection(sorting, column.name);\n  }\n\n  if (result.allowDragging) {\n    result.dragPayload = [{ type: 'column', columnName: column.name }];\n  }\n\n  return result;\n};\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      allowSorting,\n      allowGroupingByClick,\n      allowDragging,\n      allowResizing,\n      headerCellTemplate,\n      headerRowTemplate,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableHeaderRow\"\n        dependencies={[\n          { pluginName: 'TableView' },\n          { pluginName: 'SortingState', optional: !allowSorting },\n          { pluginName: 'GroupingState', optional: !allowGroupingByClick },\n          { pluginName: 'DragDropContext', optional: !allowDragging },\n          { pluginName: 'TableColumnResizing', optional: !allowResizing },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={headerCellTemplate}\n                  params={getHeaderTableCellTemplateArgs(\n                    {\n                      allowDragging,\n                      allowGroupingByClick,\n                      allowSorting,\n                      allowResizing,\n                      getMessage,\n                      ...params,\n                    },\n                    getters,\n                    actions,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={headerRowTemplate}\n              params={params}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableHeaderRow.propTypes = {\n  allowSorting: PropTypes.bool,\n  allowGroupingByClick: PropTypes.bool,\n  allowDragging: PropTypes.bool,\n  allowResizing: PropTypes.bool,\n  headerCellTemplate: PropTypes.func.isRequired,\n  headerRowTemplate: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  allowSorting: false,\n  allowGroupingByClick: false,\n  allowDragging: false,\n  allowResizing: false,\n  messages: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  TemplateRenderer,\n  PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst getFilterTableCellTemplateArgs = (\n  params,\n  { filters },\n  { setColumnFilter },\n) => ({\n  ...params,\n  column: params.tableColumn.column,\n  filter: getColumnFilterConfig(filters, params.tableColumn.column.name),\n  setFilter: config => setColumnFilter({ columnName: params.tableColumn.column.name, config }),\n});\n\nconst getValueEditorArgs = params => ({\n  column: params.column,\n  value: params.filter ? params.filter.value : null,\n  onValueChange: newValue => params.setFilter(newValue ? { value: newValue } : null),\n});\n\nconst pluginDependencies = [\n  { pluginName: 'FilteringState' },\n  { pluginName: 'TableView' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nexport class TableFilterRow extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      filterCellTemplate,\n      filterRowTemplate,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n      tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const templateArgs = getFilterTableCellTemplateArgs(\n                  { getMessage, ...params },\n                  getters,\n                  actions,\n                );\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={getValueEditorArgs(templateArgs)}\n                  >\n                    {content => (\n                      <TemplateRenderer\n                        template={filterCellTemplate}\n                        params={templateArgs}\n                      >\n                        {content}\n                      </TemplateRenderer>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateRenderer\n              template={filterRowTemplate}\n              params={params}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  messages: PropTypes.object,\n  filterCellTemplate: PropTypes.func.isRequired,\n  filterRowTemplate: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  TemplateRenderer,\n  PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n} from '@devexpress/dx-grid-core';\n\nconst getEditTableCellTemplateArgs = (\n  params,\n  getters,\n  { changeRow, changeAddedRow },\n) => {\n  const { getCellValue, createRowChange } = getters;\n  const isNew = isAddedTableRow(params.tableRow);\n  const { rowId, row } = params.tableRow;\n  const { column } = params.tableColumn;\n  const changedRow = isNew\n    ? row\n    : { ...row, ...getRowChange(getters.changedRows, rowId) };\n  return {\n    ...params,\n    row,\n    column,\n    value: getCellValue(changedRow, column.name),\n    onValueChange: (newValue) => {\n      const changeArgs = {\n        rowId,\n        change: createRowChange(changedRow, column.name, newValue),\n      };\n      if (isNew) {\n        changeAddedRow(changeArgs);\n      } else {\n        changeRow(changeArgs);\n      }\n    },\n  };\n};\n\nconst getValueEditorArgs = params => ({\n  column: params.column,\n  row: params.row,\n  value: params.value,\n  onValueChange: params.onValueChange,\n});\n\nconst getEditTableRowTemplateArgs = params => ({\n  ...params,\n  row: params.tableRow.row,\n});\n\nconst pluginDependencies = [\n  { pluginName: 'EditingState' },\n  { pluginName: 'TableView' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const { editCellTemplate, editRowTemplate, rowHeight } = this.props;\n\n    const tableBodyRowsComputed = ({ tableBodyRows, editingRows, addedRows }) =>\n      tableRowsWithEditing(tableBodyRows, editingRows, addedRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const templateArgs = getEditTableCellTemplateArgs(params, getters, actions);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={getValueEditorArgs(templateArgs)}\n                  >\n                    {content => (\n                      <TemplateRenderer\n                        template={editCellTemplate}\n                        params={templateArgs}\n                      >\n                        {content}\n                      </TemplateRenderer>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <TemplateConnector>\n              {() => (\n                <TemplateRenderer\n                  template={editRowTemplate}\n                  params={getEditTableRowTemplateArgs(params)}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  editCellTemplate: PropTypes.func.isRequired,\n  editRowTemplate: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst getHeadingEditCommandsTableCellTemplateArgs = (\n  params,\n  getters,\n  { addRow },\n) => ({\n  ...params,\n  addRow: () => addRow(),\n});\n\nconst getEditCommandsTableCellTemplateArgs = (\n  params,\n  getters,\n  {\n    startEditRows, stopEditRows, cancelChangedRows, commitChangedRows,\n    deleteRows, commitDeletedRows, cancelAddedRows, commitAddedRows,\n  },\n) => {\n  const isEdit = isEditTableRow(params.tableRow);\n  const isNew = isAddedTableRow(params.tableRow);\n  const rowIds = [params.tableRow.rowId];\n\n  return {\n    ...params,\n    row: params.tableRow.row,\n    isEditing: isEdit || isNew,\n    startEditing: () => startEditRows({ rowIds: [params.tableRow.rowId] }),\n    deleteRow: () => {\n      deleteRows({ rowIds });\n      commitDeletedRows({ rowIds });\n    },\n    cancelEditing: () => {\n      if (isNew) {\n        cancelAddedRows({ rowIds });\n      } else {\n        stopEditRows({ rowIds });\n        cancelChangedRows({ rowIds });\n      }\n    },\n    commitChanges: () => {\n      if (isNew) {\n        commitAddedRows({ rowIds });\n      } else {\n        stopEditRows({ rowIds });\n        commitChangedRows({ rowIds });\n      }\n    },\n  };\n};\n\nconst pluginDependencies = [\n  { pluginName: 'EditingState' },\n  { pluginName: 'TableView' },\n];\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellTemplate,\n      headingCellTemplate,\n      commandTemplate,\n      allowAdding,\n      allowEditing,\n      allowDeleting,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={headingCellTemplate}\n                  params={getHeadingEditCommandsTableCellTemplateArgs(\n                    {\n                      allowAdding, commandTemplate, getMessage, ...params,\n                    },\n                    getters,\n                    actions,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableViewCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={cellTemplate}\n                  params={getEditCommandsTableCellTemplateArgs(\n                    {\n                      allowEditing,\n                      allowDeleting,\n                      commandTemplate,\n                      getMessage,\n                      ...params,\n                    },\n                    getters,\n                    actions,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\nTableEditColumn.propTypes = {\n  cellTemplate: PropTypes.func.isRequired,\n  headingCellTemplate: PropTypes.func.isRequired,\n  commandTemplate: PropTypes.func.isRequired,\n  allowAdding: PropTypes.bool,\n  allowEditing: PropTypes.bool,\n  allowDeleting: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.object,\n};\nTableEditColumn.defaultProps = {\n  allowAdding: false,\n  allowEditing: false,\n  allowDeleting: false,\n  width: 140,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Getter, Action } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  changeTableColumnWidths,\n  changeDraftTableColumnWidths,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'TableView' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.defaultColumnWidths,\n      draftColumnWidths: {},\n    };\n\n    this.getState = () => {\n      const { state } = this;\n      const { columnWidths } = this.props;\n\n      return {\n        ...state,\n        columnWidths: columnWidths || state.columnWidths,\n      };\n    };\n\n    this.changeTableColumnWidthsAction = (payload) => {\n      const nextState = changeTableColumnWidths(this.getState(), payload);\n\n      this.setState(nextState);\n\n      const { onColumnWidthsChange } = this.props;\n      if (onColumnWidthsChange) {\n        onColumnWidthsChange(nextState.columnWidths);\n      }\n    };\n\n    this.changeDraftTableColumnWidthsAction = payload =>\n      this.setState(changeDraftTableColumnWidths(this.getState(), payload));\n  }\n  render() {\n    const { columnWidths, draftColumnWidths } = this.getState();\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithWidths(tableColumns, columnWidths, draftColumnWidths);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Action name=\"changeTableColumnWidths\" action={this.changeTableColumnWidthsAction} />\n        <Action\n          name=\"changeDraftTableColumnWidths\"\n          action={this.changeDraftTableColumnWidthsAction}\n        />\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.objectOf(PropTypes.number),\n  columnWidths: PropTypes.objectOf(PropTypes.number),\n  onColumnWidthsChange: PropTypes.func,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: {},\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport { pageCount, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'PagingState' },\n];\n\nconst getPagerTemplateArgs = (\n  { allowedPageSizes, getMessage },\n  { currentPage, pageSize, totalCount },\n  { setCurrentPage, setPageSize },\n) => ({\n  currentPage,\n  totalPages: pageCount(totalCount, pageSize),\n  pageSize,\n  totalCount,\n  allowedPageSizes,\n  getMessage,\n  onCurrentPageChange: setCurrentPage,\n  onPageSizeChange: setPageSize,\n});\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const { pagerTemplate, allowedPageSizes, messages } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <div>\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={pagerTemplate}\n                  params={getPagerTemplateArgs({ allowedPageSizes, getMessage }, getters, actions)}\n                />\n              )}\n            </TemplateConnector>\n          </div>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  allowedPageSizes: PropTypes.arrayOf(PropTypes.number),\n  pagerTemplate: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nPagingPanel.defaultProps = {\n  allowedPageSizes: [],\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Template, TemplatePlaceholder, PluginContainer,\n  TemplateConnector, TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport { groupingPanelItems, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst getGroupPanelTemplateArgs = (\n  {\n    allowDragging, allowSorting, allowUngroupingByClick, getMessage,\n  },\n  { columns, draftGrouping, sorting },\n  {\n    groupByColumn, setColumnSorting, draftGroupingChange, cancelGroupingChange,\n  },\n) => ({\n  allowSorting,\n  allowDragging,\n  allowUngroupingByClick,\n  sorting,\n  groupByColumn,\n  getMessage,\n  groupingPanelItems: groupingPanelItems(columns, draftGrouping),\n  changeSortingDirection: ({ columnName, keepOther, cancel }) =>\n    setColumnSorting({ columnName, keepOther, cancel }),\n  draftGroupingChange: groupingChange => draftGroupingChange(groupingChange),\n  cancelGroupingChange: () => cancelGroupingChange(),\n});\n\nexport class GroupingPanel extends React.PureComponent {\n  render() {\n    const {\n      groupPanelTemplate,\n      allowSorting,\n      allowDragging,\n      allowUngroupingByClick,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"GroupingPanel\"\n        dependencies={[\n          { pluginName: 'GroupingState' },\n          { pluginName: 'SortingState', optional: !allowSorting },\n        ]}\n      >\n        <Template name=\"header\">\n          <div>\n            <TemplateConnector>\n              {(getters, actions) => (\n                <TemplateRenderer\n                  template={groupPanelTemplate}\n                  params={getGroupPanelTemplateArgs(\n                    {\n                      allowDragging, allowSorting, allowUngroupingByClick, getMessage,\n                    },\n                    getters,\n                    actions,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n            <TemplatePlaceholder />\n          </div>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nGroupingPanel.propTypes = {\n  allowSorting: PropTypes.bool,\n  allowDragging: PropTypes.bool,\n  allowUngroupingByClick: PropTypes.bool,\n  groupPanelTemplate: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanel.defaultProps = {\n  allowSorting: false,\n  allowDragging: false,\n  allowUngroupingByClick: false,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Template } from '@devexpress/dx-react-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const { formatterTemplate, editorTemplate, type } = this.props;\n    return (\n      <PluginContainer name=\"DataTypeProvider\">\n        {formatterTemplate\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => column.dataType === type}\n            >\n              {params => formatterTemplate(params)}\n            </Template>\n          )\n          : null\n        }\n        {editorTemplate\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => column.dataType === type}\n            >\n              {params => editorTemplate(params)}\n            </Template>\n          )\n          : null\n        }\n      </PluginContainer>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  type: PropTypes.string,\n  formatterTemplate: PropTypes.func,\n  editorTemplate: PropTypes.func,\n};\n\nDataTypeProvider.defaultProps = {\n  type: undefined,\n  formatterTemplate: undefined,\n  editorTemplate: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  PluginContainer,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n  TemplateRenderer,\n} from '@devexpress/dx-react-core';\nimport { visibleTableColumns, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'TableView' },\n];\n\nexport class TableColumnVisibility extends React.PureComponent {\n  render() {\n    const { hiddenColumns, emptyMessageTemplate, messages } = this.props;\n    const visibleTableColumnsComputed = ({ tableColumns }) =>\n      visibleTableColumns(tableColumns, hiddenColumns);\n\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Template name=\"tableView\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (tableColumns.length\n                ? <TemplatePlaceholder />\n                : <TemplateRenderer\n                  template={emptyMessageTemplate}\n                  params={{ getMessage, ...params }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumns: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageTemplate: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumns: [],\n  messages: {},\n};\n","/* globals requestAnimationFrame */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n} from '@devexpress/dx-grid-core';\n\nconst TABLE_FLEX_TYPE = 'flex';\n\nconst areColumnsChanged = (prevColumns, nextColumns) => {\n  if (prevColumns.length !== nextColumns.length) return true;\n  const prevKeys = prevColumns.map(column => column.key);\n  return nextColumns.find(column =>\n    prevKeys.indexOf(column.key) === -1) !== undefined;\n};\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.tableNode = null;\n\n    this.setRef = (ref) => { if (ref) this.tableNode = ref; };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { columns: nextColumns } = nextProps;\n    const { columns } = this.props;\n\n    if (areColumnsChanged(columns, nextColumns)) return;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const tableWidth = findDOMNode(this).scrollWidth;\n    this.animations = getAnimations(columns, nextColumns, tableWidth, this.animations);\n    this.processAnimationFrame();\n  }\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE, type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n  processAnimationFrame() {\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (this.state.animationState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n\n    requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        columns={columns}\n        minWidth={minWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TemplateRenderer } from '@devexpress/dx-react-core';\nimport { getTableRowColumnsWithColSpan } from '@devexpress/dx-grid-core';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowTemplate,\n      cellTemplate,\n    } = this.props;\n\n    return (\n      <TemplateRenderer\n        template={rowTemplate}\n        params={{\n          tableRow: row,\n          style: getRowStyle({ row }),\n        }}\n      >\n        {\n          getTableRowColumnsWithColSpan(columns, row.colSpanStart)\n            .map(column => (\n              <TemplateRenderer\n                key={column.key}\n                template={cellTemplate}\n                params={{\n                  tableRow: row,\n                  tableColumn: column,\n                  style: getColumnStyle({ column }),\n                  ...column.colSpan ? { colSpan: column.colSpan } : null,\n                }}\n              />\n            ))\n        }\n      </TemplateRenderer>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowTemplate: PropTypes.func.isRequired,\n  cellTemplate: PropTypes.func.isRequired,\n};\n","const OVERSCAN = 3;\n\nexport const STUB_TYPE = 'stub';\nconst VISIBLE_TYPE = 'visible';\nconst OVERSCAN_TYPE = 'overscan';\n\nconst STARTING_KEY = 'starting';\nconst ENDING_KEY = 'ending';\n\nexport const getVisibleRows = (rows, viewportTop, viewportHeight, getRowHeight) => {\n  const result = [];\n\n  const bottom = viewportTop + viewportHeight;\n  let position = 0;\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const last = result[result.length - 1];\n\n    const height = getRowHeight(row);\n    const nextPosition = position + height;\n    if (\n      (viewportTop <= position && position < bottom\n        && viewportTop < nextPosition && nextPosition <= bottom) ||\n      (viewportTop > position && nextPosition > bottom)\n    ) {\n      if (last && last.type === STUB_TYPE) {\n        rows.slice(Math.max(0, i - OVERSCAN), i).forEach((overscanRow) => {\n          const overscanRowSize = getRowHeight(overscanRow);\n          last.height -= overscanRowSize;\n          result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n        });\n      }\n      result.push({ type: VISIBLE_TYPE, height, row });\n    } else if (last && last.type === STUB_TYPE) {\n      last.height += height;\n    } else if (i > 0) {\n      rows.slice(i, i + OVERSCAN).forEach((overscanRow) => {\n        const overscanRowSize = getRowHeight(overscanRow);\n        result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n      });\n      i += OVERSCAN - 1;\n      if (i < rows.length) {\n        result.push({ type: STUB_TYPE, key: ENDING_KEY, height: 0 });\n      }\n    } else {\n      result.push({ type: STUB_TYPE, key: STARTING_KEY, height });\n    }\n    position = nextPosition;\n  }\n\n  return result;\n};\n\nconst getRowPosition = (visibleRows, index) => visibleRows\n  .slice(0, index)\n  .reduce((acc, row) => acc + row.height, 0);\n\nexport const firstVisibleRowOffset = (prevVisibleRows, visibleRows) => {\n  const firstVisibleRowIndex = visibleRows.findIndex(row => row.type === VISIBLE_TYPE);\n  if (firstVisibleRowIndex === -1) return 0;\n\n  const firstVisibleRow = visibleRows[firstVisibleRowIndex].row;\n  const prevIndex = prevVisibleRows.findIndex(row => row.row === firstVisibleRow);\n  if (prevIndex === -1) return 0;\n\n  const position = getRowPosition(visibleRows, firstVisibleRowIndex);\n  const prevPosition = getRowPosition(prevVisibleRows, prevIndex);\n  return position - prevPosition;\n};\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { TemplateRenderer } from '@devexpress/dx-react-core';\nimport { ColumnGroup } from './column-group';\nimport { RowLayout } from './row-layout';\nimport {\n  getVisibleRows,\n  firstVisibleRowOffset,\n} from './virtual-table-utils';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleBodyRows: [],\n    };\n\n    this.rowRefs = new Map();\n    this.rowHeights = new Map();\n    this.viewportTop = 0;\n    this.updateViewport = this.updateViewport.bind(this);\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n\n    this.state.visibleBodyRows = this.getVisibleRows();\n  }\n  componentDidMount() {\n    this.storeRowHeights();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.headerRows !== nextProps.headerRows ||\n      this.props.rows !== nextProps.rows) {\n      const { rowHeights: prevRowHeight } = this;\n      this.rowHeights = [...nextProps.headerRows, ...nextProps.rows].reduce(\n        (acc, row) => {\n          const rowHeight = prevRowHeight.get(row.key);\n          if (rowHeight !== undefined) {\n            acc.set(row.key, rowHeight);\n          }\n          return acc;\n        },\n        new Map(),\n      );\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(nextProps, this.viewportTop),\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.storeRowHeights();\n  }\n  getRowHeight(row) {\n    const storedHeight = this.rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return this.props.estimatedRowHeight;\n  }\n  getVisibleRows({ rows, headerRows, height } = this.props, top = this.viewportTop) {\n    const headHeight = headerRows.reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    return getVisibleRows(rows, top, height - headHeight, this.getRowHeight);\n  }\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref).getBoundingClientRect().height])\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const { rowHeights } = this;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      const { visibleBodyRows: prevVisibleBodyRows } = this.state;\n      const visibleBodyRows = this.getVisibleRows();\n\n      this.setState({\n        visibleBodyRows,\n      });\n\n      const scrollOffset = firstVisibleRowOffset(prevVisibleBodyRows, visibleBodyRows);\n      if (scrollOffset !== 0) {\n        // eslint-disable-next-line react/no-find-dom-node\n        findDOMNode(this).scrollTop += scrollOffset;\n      }\n    }\n  }\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n  updateViewport(e) {\n    const node = e.target;\n\n    // NOTE: prevent iOS to flicker in bounces\n    if (node.scrollTop < 0 ||\n      node.scrollLeft < 0 ||\n      node.scrollLeft + node.clientWidth > node.scrollWidth ||\n      node.scrollTop + node.clientHeight > node.scrollHeight) {\n      return;\n    }\n\n    if (this.viewportTop !== node.scrollTop) {\n      this.viewportTop = node.scrollTop;\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(),\n      });\n    }\n  }\n  render() {\n    const {\n      headerRows, columns, minWidth, height,\n      containerTemplate, headTableTemplate, tableTemplate, headTemplate, bodyTemplate,\n      rowTemplate, cellTemplate,\n    } = this.props;\n    const {\n      visibleBodyRows,\n    } = this.state;\n\n    return (\n      <TemplateRenderer\n        template={containerTemplate}\n        params={{\n          style: { height: `${height}px` },\n          onScroll: this.updateViewport,\n        }}\n      >\n        {!!headerRows.length && (\n          <TemplateRenderer\n            template={headTableTemplate}\n            params={{ style: { minWidth: `${minWidth}px` } }}\n          >\n            <ColumnGroup columns={columns} />\n            <TemplateRenderer\n              template={headTemplate}\n            >\n              {headerRows.map(row => (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowTemplate={rowTemplate}\n                  cellTemplate={cellTemplate}\n                />\n              ))}\n            </TemplateRenderer>\n          </TemplateRenderer>\n        )}\n        <TemplateRenderer\n          template={tableTemplate}\n          params={{ style: { minWidth: `${minWidth}px` } }}\n        >\n          <ColumnGroup columns={columns} />\n          <TemplateRenderer\n            template={bodyTemplate}\n          >\n            {visibleBodyRows.map((visibleRow) => {\n              if (visibleRow.type === 'stub') {\n                return (\n                  <tr key={visibleRow.key} style={{ height: `${visibleRow.height}px` }} />\n                );\n              }\n              const { row } = visibleRow;\n              return (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowTemplate={rowTemplate}\n                  cellTemplate={cellTemplate}\n                />\n              );\n            })}\n          </TemplateRenderer>\n        </TemplateRenderer>\n      </TemplateRenderer>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  cellTemplate: PropTypes.func.isRequired,\n  rowTemplate: PropTypes.func.isRequired,\n  bodyTemplate: PropTypes.func.isRequired,\n  headTemplate: PropTypes.func,\n  tableTemplate: PropTypes.func.isRequired,\n  headTableTemplate: PropTypes.func,\n  containerTemplate: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  headTemplate: () => null,\n  headTableTemplate: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TemplateRenderer,\n} from '@devexpress/dx-react-core';\n\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockTemplate,\n      rowTemplate,\n      cellTemplate,\n    } = this.props;\n\n    return (\n      <TemplateRenderer\n        template={blockTemplate}\n      >\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowTemplate={rowTemplate}\n                cellTemplate={cellTemplate}\n              />\n            ))\n        }\n      </TemplateRenderer>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockTemplate: PropTypes.func.isRequired,\n  rowTemplate: PropTypes.func.isRequired,\n  cellTemplate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TemplateRenderer } from '@devexpress/dx-react-core';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      rows,\n      columns,\n      minWidth,\n      containerTemplate,\n      tableTemplate,\n      headTemplate,\n      bodyTemplate,\n      rowTemplate,\n      cellTemplate,\n    } = this.props;\n\n    return (\n      <TemplateRenderer\n        template={containerTemplate}\n      >\n        <TemplateRenderer\n          template={tableTemplate}\n          params={{\n            style: {\n              minWidth: `${minWidth}px`,\n            },\n          }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              key=\"head\"\n              rows={headerRows}\n              columns={columns}\n              blockTemplate={headTemplate}\n              rowTemplate={rowTemplate}\n              cellTemplate={cellTemplate}\n            />\n          )}\n          <RowsBlockLayout\n            key=\"body\"\n            rows={rows}\n            columns={columns}\n            blockTemplate={bodyTemplate}\n            rowTemplate={rowTemplate}\n            cellTemplate={cellTemplate}\n          />\n        </TemplateRenderer>\n      </TemplateRenderer>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerTemplate: PropTypes.func.isRequired,\n  tableTemplate: PropTypes.func.isRequired,\n  headTemplate: PropTypes.func,\n  bodyTemplate: PropTypes.func.isRequired,\n  rowTemplate: PropTypes.func.isRequired,\n  cellTemplate: PropTypes.func.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  headTemplate: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DragSource, DropTarget } from '@devexpress/dx-react-core';\nimport { getColumnSortingDirection, getGroupCellTargetIndex } from '@devexpress/dx-grid-core';\n\nconst getSortingConfig = (sorting, column) => {\n  const result = {\n    sortingSupported: sorting !== undefined,\n  };\n\n  if (result.sortingSupported) {\n    result.sortingDirection = getColumnSortingDirection(sorting, column.name);\n  }\n\n  return result;\n};\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetColumnIndex: -1,\n    };\n\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { draftGroupingChange, groupingPanelItems } = this.props;\n      const { sourceColumnName, targetColumnIndex: prevTargetColumnIndex } = this.state;\n      const itemGeometries = this.itemRefs.map(element => element.getBoundingClientRect());\n      const sourceColumnIndex = groupingPanelItems\n        .findIndex(column => column.name === sourceColumnName);\n      const targetColumnIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceColumnIndex,\n        clientOffset,\n      );\n\n      if (prevTargetColumnIndex === targetColumnIndex) return;\n\n      draftGroupingChange({\n        columnName: sourceColumnName,\n        groupIndex: targetColumnIndex,\n      });\n      this.setState({ targetColumnIndex });\n    };\n    this.onLeave = () => {\n      const { draftGroupingChange } = this.props;\n      const { sourceColumnName } = this.state;\n      draftGroupingChange({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetColumnIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { groupByColumn } = this.props;\n      const { sourceColumnName, targetColumnIndex } = this.state;\n      this.resetState();\n      groupByColumn({\n        columnName: sourceColumnName,\n        groupIndex: targetColumnIndex,\n      });\n    };\n    this.onDragEnd = () => {\n      const { sourceColumnName, targetColumnIndex } = this.state;\n      const { groupByColumn } = this.props;\n      if (sourceColumnName && targetColumnIndex === -1) {\n        groupByColumn({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n\n  getItems() {\n    const {\n      allowSorting, sorting, changeSortingDirection,\n      groupingPanelItems,\n      groupByColumn,\n      groupPanelItemTemplate,\n      allowDragging,\n      allowUngroupingByClick,\n    } = this.props;\n\n    this.itemRefs = [];\n    return groupingPanelItems.map(({ column, draft }) => {\n      const { sortingSupported, sortingDirection } = getSortingConfig(sorting, column);\n      const item = groupPanelItemTemplate({\n        column,\n        draft,\n        allowSorting: allowSorting && sortingSupported,\n        sortingDirection,\n        changeSortingDirection,\n        groupByColumn,\n        allowUngroupingByClick,\n      });\n\n      return allowDragging\n        ? (\n          <DragSource\n            key={column.name}\n            getPayload={() => [{ type: 'column', columnName: column.name }]}\n            onEnd={this.onDragEnd}\n          >\n            <div\n              ref={element => element && this.itemRefs.push(element)}\n              style={{ display: 'inline-block' }}\n            >\n              {item}\n            </div>\n          </DragSource>\n        )\n        : (\n          <div\n            ref={element => element && this.itemRefs.push(element)}\n            key={column.name}\n            style={{ display: 'inline-block' }}\n          >\n            {item}\n          </div>\n        );\n    });\n  }\n\n  resetState() {\n    const { cancelGroupingChange } = this.props;\n    cancelGroupingChange();\n    this.setState({\n      sourceColumnName: null,\n      targetColumnIndex: -1,\n    });\n  }\n\n  render() {\n    const {\n      groupByColumnText,\n      panelTemplate,\n      allowDragging,\n    } = this.props;\n\n    const items = this.getItems();\n\n    const groupPanel = (\n      items.length\n        ? panelTemplate({ items })\n        : <span>{groupByColumnText}</span>\n    );\n\n    return allowDragging\n      ? (\n        <DropTarget\n          onEnter={this.onEnter}\n          onOver={this.onOver}\n          onLeave={this.onLeave}\n          onDrop={this.onDrop}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  allowSorting: PropTypes.bool,\n  sorting: PropTypes.any,\n  changeSortingDirection: PropTypes.func,\n  groupingPanelItems: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  groupByColumn: PropTypes.func,\n  groupByColumnText: PropTypes.any,\n  allowUngroupingByClick: PropTypes.bool,\n  groupPanelItemTemplate: PropTypes.func.isRequired,\n  panelTemplate: PropTypes.func.isRequired,\n  allowDragging: PropTypes.bool,\n  draftGroupingChange: PropTypes.func,\n  cancelGroupingChange: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  allowSorting: false,\n  sorting: undefined,\n  changeSortingDirection: () => {},\n  groupByColumn: () => {},\n  groupByColumnText: undefined,\n  allowUngroupingByClick: false,\n  allowDragging: false,\n  draftGroupingChange: () => {},\n  cancelGroupingChange: () => {},\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","rootTemplate","headerPlaceholderTemplate","footerPlaceholderTemplate","rowIdGetter","cellValueGetter","children","content","React","PureComponent","propTypes","PropTypes","array","isRequired","func","defaultProps","Grid","oneOfType","arrayOf","node","ColumnChooser","onHiddenColumnsChange","handleColumnToggle","columnName","hiddenColumns","nextHiddenColumnNames","toggleColumn","containerTemplate","itemTemplate","items","columnChooserItems","handleItemToggle","item","column","name","map","object","string","undefined","FilteringState","state","defaultFilters","setColumnFilter","filters","config","onFiltersChange","nextFilters","setState","pluginDependencies","pluginName","LocalFiltering","getColumnPredicate","rowsComputed","isGroupRow","getRowLevelKey","filteredRows","EditingState","defaultEditingRows","defaultAddedRows","defaultChangedRows","defaultDeletedRows","reduceEditingRows","editingRows","payload","onEditingRowsChange","nextEditingRows","reducer","reduceChangedRows","changedRows","onChangedRowsChange","nextChangedRows","reduceAddedRows","addedRows","onAddedRowsChange","nextAddedRows","reduceDeletedRows","deletedRows","onDeletedRowsChange","nextDeletedRows","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","addRow","changeAddedRow","cancelAddedRows","deleteRows","cancelDeletedRows","commitAddedRows","rowIds","toCommit","addedRowsByIds","changeSet","added","commitChanges","commitChangedRows","changedRowsByIds","changed","commitDeletedRows","deleted","onCommitChanges","createRowChangeComputed","computedCreateRowChange","createRowChange","row","rowId","change","PagingState","defaultCurrentPage","defaultPageSize","setCurrentPage","page","onCurrentPageChange","currentPage","setPageSize","size","onPageSizeChange","pageSize","totalCount","number","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","paginatedRows","LocalPaging","getter","action","totalPages","pageCount","Math","max","dependencies","optional","adjustSortIndex","sortIndex","grouping","sorting","slice","reduce","acc","columnGrouping","columnSortingIndex","findIndex","columnSorting","GroupingState","defaultGrouping","defaultExpandedGroups","groupByColumn","bind","toggleGroupExpanded","applyReducer","toggleExpandedGroups","draftGroupingChange","cancelGroupingChange","setColumnSorting","expandedGroups","keepOther","restParams","getState","groupingIndex","groupIndex","prevGrouping","prevGroupingIndex","length","prevState","statePart","onGroupingChange","onExpandedGroupsChange","groupingChange","draftGrouping","Set","expandedGroupedRowsComputed","expandedGroupRows","LocalGrouping","getColumnIdentity","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","availableToSelectComputed","getAvailableToSelect","SelectionState","defaultSelection","changeSelection","selection","onSelectionChange","selectionComputed","availableToSelect","getAvailableSelection","selected","setRowsSelection","SortingState","defaultSorting","onSortingChange","LocalSorting","getColumnCompare","sortedRows","getContainerTemplateArgs","clientOffset","columnTemplate","filter","type","find","DragDropContext","getters","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReordering","defaultOrder","order","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","sourceColumnIndex","targetColumnIndex","draftOrderComputed","getDraftOrder","cellDimensionGetters","getAvailableColumns","tableColumn","data","TABLE_DATA_TYPE","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cellDimensions","getCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","onOrderChange","nextOrder","changeColumnOrder","tableContainerTemplate","reorderingRowTemplate","reorderingCellTemplate","columnsComputed","tableColumns","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","cellDimensionsGetter","storeCellDimensionsGetter","fn","getTableLayoutTemplateArgs","rowTemplate","cellTemplate","tableBodyRows","getDataTableCellTemplateArgs","getValueFormatterArgs","value","getDataTableRowTemplateArgs","tableBodyRowsComputed","tableRowsWithDataRows","tableColumnsComputed","tableColumnsWithDataRows","TableView","tableLayoutTemplate","tableCellTemplate","tableRowTemplate","tableNoDataRowTemplate","tableNoDataCellTemplate","tableStubCellTemplate","tableStubHeaderCellTemplate","messages","getMessage","getMessagesFormatter","actions","headerRows","isHeaderStubTableCell","isDataTableCell","templateArgs","isNoDataTableRow","isDataTableRow","getSelectTableCellTemplateArgs","getSelectAllTableCellTemplateArgs","getSelectTableRowTemplateArgs","selectByRowClick","highlightSelected","TableSelection","showSelectionColumn","showSelectAll","selectionColumnWidth","selectAllCellTemplate","selectCellTemplate","selectRowTemplate","tableColumnsWithSelection","isSelectAllTableCell","isSelectTableCell","bool","RowDetailState","defaultExpandedRows","setDetailRowExpanded","prevExpandedDetails","expandedRows","onExpandedRowsChange","getDetailToggleTableCellTemplateArgs","isDetailRowExpanded","getDetailTableCellTemplateArgs","template","getDetailTableRowTemplateArgs","TableRowDetail","rowHeight","detailToggleCellTemplate","detailCellTemplate","detailRowTemplate","detailToggleCellWidth","tableColumnsWithDetail","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailTableRow","getGroupIndentTableCellTemplateArgs","getGroupTableCellTemplateArgs","compoundKey","has","groupKey","getGroupTableRowTemplateArgs","tableRowsWithGrouping","createShowWhenGrouped","cache","showWhenGrouped","TableGroupRow","groupCellTemplate","groupRowTemplate","groupIndentCellTemplate","groupIndentColumnWidth","showColumnWhenGrouped","tableColumnsWithGrouping","isGroupTableCell","isGroupIndentTableCell","isGroupTableRow","getHeaderTableCellTemplateArgs","changeTableColumnWidths","changeDraftTableColumnWidths","allowSorting","allowDragging","allowGroupingByClick","allowResizing","groupingSupported","result","cancel","shift","shifts","sortingDirection","getColumnSortingDirection","dragPayload","tableRowsWithHeading","TableHeaderRow","headerCellTemplate","headerRowTemplate","isHeadingTableCell","isHeadingTableRow","getFilterTableCellTemplateArgs","getColumnFilterConfig","getValueEditorArgs","setFilter","newValue","TableFilterRow","filterCellTemplate","filterRowTemplate","tableHeaderRowsWithFilter","isFilterTableCell","isFilterTableRow","any","getEditTableCellTemplateArgs","isNew","isAddedTableRow","changedRow","getRowChange","changeArgs","onValueChange","getEditTableRowTemplateArgs","TableEditRow","editCellTemplate","editRowTemplate","tableRowsWithEditing","isEditTableCell","isEditTableRow","getHeadingEditCommandsTableCellTemplateArgs","getEditCommandsTableCellTemplateArgs","isEdit","TableEditColumn","headingCellTemplate","commandTemplate","allowAdding","allowEditing","allowDeleting","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","TableColumnResizing","defaultColumnWidths","columnWidths","changeTableColumnWidthsAction","nextState","onColumnWidthsChange","changeDraftTableColumnWidthsAction","draftColumnWidths","tableColumnsWithWidths","objectOf","getPagerTemplateArgs","allowedPageSizes","PagingPanel","pagerTemplate","getGroupPanelTemplateArgs","allowUngroupingByClick","groupingPanelItems","GroupingPanel","groupPanelTemplate","DataTypeProvider","formatterTemplate","editorTemplate","dataType","TableColumnVisibility","emptyMessageTemplate","visibleTableColumnsComputed","visibleTableColumns","TABLE_FLEX_TYPE","areColumnsChanged","prevColumns","nextColumns","prevKeys","key","TableLayout","Map","animations","tableNode","setRef","ref","nextProps","tableWidth","findDOMNode","scrollWidth","getAnimations","processAnimationFrame","animationState","isFixedWidth","push","get","filterActiveAnimations","evalAnimations","Layout","layoutComponent","minColumnWidth","restProps","getColumns","minWidth","ColumnGroup","getColumnStyle","getRowStyle","height","RowLayout","colSpanStart","colSpan","OVERSCAN","STUB_TYPE","VISIBLE_TYPE","OVERSCAN_TYPE","STARTING_KEY","ENDING_KEY","getVisibleRows","viewportTop","viewportHeight","getRowHeight","bottom","position","i","last","nextPosition","forEach","overscanRow","overscanRowSize","getRowPosition","visibleRows","index","firstVisibleRowOffset","prevVisibleRows","firstVisibleRowIndex","firstVisibleRow","prevIndex","prevPosition","VirtualTableLayout","rowRefs","rowHeights","updateViewport","registerRowRef","visibleBodyRows","storeRowHeights","prevRowHeight","set","storedHeight","estimatedRowHeight","top","headHeight","rowsWithChangedHeights","Array","from","entries","getBoundingClientRect","prevVisibleBodyRows","scrollOffset","scrollTop","delete","e","target","scrollLeft","clientWidth","clientHeight","scrollHeight","headTableTemplate","tableTemplate","headTemplate","bodyTemplate","style","visibleRow","RowsBlockLayout","blockTemplate","StaticTableLayout","getSortingConfig","sortingSupported","GroupPanelLayout","onEnter","itemGeometries","itemRefs","element","getGroupCellTargetIndex","resetState","onDragEnd","changeSortingDirection","groupPanelItemTemplate","draft","display","groupByColumnText","panelTemplate","getItems","groupPanel","shape"],"mappings":"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"}