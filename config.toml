[serverConfig]

    ServerPort = "8000" #Required to input as string
    ServerAddr = "192.168.1.8" #Put in the IP address you want to bind to as string
    LogLevel = "Debug" # Options = Debug, Info, Warn, Error, Fatal, Panic
    LogOutput = "file" #Options = file, stdout #file will print it to logs/server.log

    SeedRatioStop = 1.50 #automatically stops the torrent after it reaches this seeding ratio

    #Relative or absolute path accepted, the server will convert any relative path to an absolute path.
    DefaultMoveFolder = 'downloads' #default path that a finished torrent is symlinked to after completion. Torrents added via RSS will default here
    TorrentWatchFolder = 'torrentUpload' #folder path that is watched for .torrent files and adds them automatically every 5 minutes
    
    #Limits your upload and download speed globally, all are averages and not burst protected (usually burst on start).
    #Low = ~.05MB/s, Medium = ~.5MB/s, High = ~1.5MB/s
    UploadRateLimit = "Unlimited"  #Options are "Low", "Medium", "High", "Unlimited" #Unlimited is default
    DownloadRateLimit = "Unlimited"
    #Maximum number of allowed active torrents, the rest will be queued
    MaxActiveTorrents = 5

[goTorrentWebUI]
    #Basic goTorrentWebUI authentication (not terribly secure, implemented in JS, password is hashed to SHA256, not salted, basically don't depend on this if you require very good security)
    WebUIAuth = false # bool, if false no authentication is required for the webUI
    WebUIUser = "admin"
    WebUIPassword = "Password1"


[notifications]

    PushBulletToken = "" #add your pushbullet api token here to notify of torrent completion to pushbullet

    # execute the command when torrent completes
    NotifyCommand = ""

[reverseProxy]
    #This is for setting up goTorrent behind a reverse Proxy (with SSL, reverse proxy with no SSL will require editing the WSS connection to a WS connection manually)
    ProxyEnabled = false #bool, either false or true
    #URL is CASE SENSITIVE
    BaseURL = "domain.com/subroute/"  # MUST be in the format (if you have a subdomain, and must have trailing slash) "yoursubdomain.domain.org/subroute/"

[socksProxy]
    SocksProxyEnabled = false #bool, either false or true
    # Sets usage of Socks5 Proxy. Authentication should be included in the url if needed.
    # Examples: socks5://demo:demo@192.168.99.100:1080
    # 			 http://proxy.domain.com:3128
    SocksProxyURL = ""

[EncryptionPolicy]

    DisableEncryption = false
    ForceEncryption = false
    PreferNoEncryption = true

[torrentClientConfig]
    DownloadDir = 'downloading'    #the full OR relative path where the torrent server stores in-progress torrents

    Seed = true #boolean #seed after download
    
    # Never send chunks to peers.
    NoUpload = false #boolean

    #User-provided Client peer ID. If not present, one is generated automatically.
    PeerID = "" #string

    #The address to listen for new uTP and TCP bittorrent protocol connections. DHT shares a UDP socket with uTP unless configured otherwise.
    ListenAddr = "" #Leave Blank for default, syntax "HOST:PORT"

    #Don't announce to trackers. This only leaves DHT to discover peers.
    DisableTrackers = false  #boolean

    DisablePEX = false # boolean

    # Don't create a DHT.
    NoDHT = false #boolean

    #For the bittorrent protocol.
    DisableUTP = false #bool

    #For the bittorrent protocol.
    DisableTCP = false #bool

    #Called to instantiate storage for each added torrent. Builtin backends
    # are in the storage package. If not set, the "file" implementation is used.
    DefaultStorage = "storage.ClientImpl"

    #encryption policy
    IPBlocklist = "" #of type iplist.Ranger

    DisableIPv6 = false #boolean

    Debug = false #boolean

    #HTTP *http.Client

    HTTPUserAgent = "" # HTTPUserAgent changes default UserAgent for HTTP requests

    ExtendedHandshakeClientVersion = "" 

    Bep20 = ""

    # Overrides the default DHT configuration, see dhtServerConfig  #advanced.. so be careful
    DHTConfig = "" # default is "dht.ServerConfig"

[dhtServerConfig]
    # Set NodeId Manually. Caller must ensure that if NodeId does not conform to DHT Security Extensions, that NoSecurity is also set.
    NodeId = "" #[20]byte

    Conn = "" # https:#godoc.org/net#PacketConn #not implemented

    # Don't respond to queries from other nodes.
    Passive = false # boolean

    # the default addresses are "router.utorrent.com:6881","router.bittorrent.com:6881","dht.transmissionbt.com:6881","dht.aelitis.com:6881",
    #https:#github.com/anacrolix/dht/blob/master/dht.go
    StartingNodes = "dht.GlobalBootstrapAddrs"

    #Disable the DHT security extension: http:#www.libtorrent.org/dht_sec.html.
    NoSecurity = false

    #Initial IP blocklist to use. Applied before serving and bootstrapping begins.
    IPBlocklist = "" #of type iplist.Ranger

    #Used to secure the server's ID. Defaults to the Conn's LocalAddr(). Set to the IP that remote nodes will see,
    #as that IP is what they'll use to validate our ID.
    PublicIP = "" #net.IP

    #Hook received queries. Return true if you don't want to propagate to the default handlers.
    OnQuery = "func(query *krpc.Msg, source net.Addr) (propagate bool)"

    #Called when a peer successfully announces to us.
    OnAnnouncePeer = "func(infoHash metainfo.Hash, peer Peer)"

    #How long to wait before re-sending queries that haven't received a response. Defaults to a random value between 4.5 and 5.5s.
    QueryResendDelay = "func() time.Duration"