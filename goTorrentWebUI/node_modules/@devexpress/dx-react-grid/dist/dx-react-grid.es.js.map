{"version":3,"file":"dx-react-grid.es.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/utils/state-helper.js","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/virtual-table-utils.js","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/toolbar.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Getter, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <Plugin>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"header\" />\n        <Template name=\"body\" />\n        <Template name=\"footer\" />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\n\nimport { getMessagesFormatter, columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TableColumnVisibility' },\n  { name: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.buttonRef = this.buttonRef.bind(this);\n  }\n  buttonRef(button) {\n    this.button = button;\n  }\n  handleToggle() {\n    this.setState({ visible: !this.state.visible });\n  }\n  handleHide() {\n    this.setState({ visible: false });\n  }\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <Plugin\n        name=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ columns, hiddenColumnNames }, { toggleColumnVisibility }) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.buttonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumnNames)\n                      .map(item => (\n                        <Item\n                          key={item.column.name}\n                          item={item}\n                          onToggle={() => toggleColumnVisibility(item.column.name)}\n                        />\n                    ))}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n","const STATE_CONSISTENCY_TIMEOUT = 1000 / 60;\n\nexport const createStateHelper = (component, controlledStateProperties = {}) => {\n  const stateConsistencyTimers = {};\n  const checkStateConsistency = (propertyName) => {\n    if (component.props[propertyName] !== undefined\n      && component.props[propertyName] !== component.state[propertyName]) {\n      component.setState({ [propertyName]: component.props[propertyName] });\n    }\n  };\n  const notifyStateChange = (nextState, state) => {\n    Object.keys(controlledStateProperties).forEach((propertyName) => {\n      const changeEvent = controlledStateProperties[propertyName]();\n      if (changeEvent && nextState[propertyName] !== state[propertyName]) {\n        changeEvent(nextState[propertyName]);\n        clearTimeout(stateConsistencyTimers[propertyName]);\n        stateConsistencyTimers[propertyName] = setTimeout(\n          checkStateConsistency.bind(null, propertyName),\n          STATE_CONSISTENCY_TIMEOUT,\n        );\n      }\n    });\n  };\n\n  let lastStateUpdater = null;\n  let initialState = null;\n  const applyReducer = (reduce, payload, callback) => {\n    const stateUpdater = (prevState) => {\n      if (initialState === null) {\n        initialState = prevState;\n      }\n      const stateChange = reduce({ ...prevState }, payload);\n      const state = { ...prevState, ...stateChange };\n\n      if (typeof callback === 'function') {\n        callback(state, prevState);\n      }\n      if (stateUpdater === lastStateUpdater) {\n        notifyStateChange(state, initialState);\n        initialState = null;\n      }\n\n      return stateChange;\n    };\n    lastStateUpdater = stateUpdater;\n    component.setState(stateUpdater);\n  };\n  const applyFieldReducer = (field, reduce, payload) => {\n    applyReducer(state => ({\n      [field]: reduce(state[field], payload),\n    }));\n  };\n\n  return {\n    applyReducer,\n    applyFieldReducer,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeColumnFilter } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.filters || props.defaultFilters,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        filters: () => this.props.onFiltersChange,\n      },\n    );\n\n    this.changeColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', changeColumnFilter);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      filters,\n    } = nextProps;\n    this.setState({\n      ...filters !== undefined ? { filters } : null,\n    });\n  }\n  render() {\n    const { filters } = this.state;\n\n    return (\n      <Plugin\n        name=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Action name=\"changeColumnFilter\" action={this.changeColumnFilter} />\n      </Plugin>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: [],\n  onFiltersChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { filteredRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n];\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName =>\n      getColumnExtension(columnExtensions, columnName).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filters,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) =>\n      filteredRows(rows, filters, getCellValue, getColumnPredicate, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n  startEditRows,\n  stopEditRows,\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n  deleteRows,\n  cancelDeletedRows,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingRowIds: props.editingRowIds || props.defaultEditingRowIds,\n      addedRows: props.addedRows || props.defaultAddedRows,\n      rowChanges: props.rowChanges || props.defaultRowChanges,\n      deletedRowIds: props.deletedRowIds || props.defaultDeletedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        editingRowIds: () => this.props.onEditingRowIdsChange,\n        addedRows: () => this.props.onAddedRowsChange,\n        rowChanges: () => this.props.onRowChangesChange,\n        deletedRowIds: () => this.props.onDeletedRowIdsChange,\n      },\n    );\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        changed: changedRowsByIds(this.state.rowChanges, rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        added: addedRowsByIds(this.state.addedRows, rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      editingRowIds,\n      rowChanges,\n      addedRows,\n      deletedRowIds,\n    } = nextProps;\n    this.setState({\n      ...editingRowIds !== undefined ? { editingRowIds } : null,\n      ...rowChanges !== undefined ? { rowChanges } : null,\n      ...addedRows !== undefined ? { addedRows } : null,\n      ...deletedRowIds !== undefined ? { deletedRowIds } : null,\n    });\n  }\n  render() {\n    const { createRowChange, columnExtensions } = this.props;\n    const {\n      editingRowIds, rowChanges, addedRows, deletedRowIds,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRowIds\" value={editingRowIds} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"rowChanges\" value={rowChanges} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRowIds\" value={deletedRowIds} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n      </Plugin>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n\n  editingRowIds: PropTypes.array,\n  defaultEditingRowIds: PropTypes.array,\n  onEditingRowIdsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  rowChanges: PropTypes.object,\n  defaultRowChanges: PropTypes.object,\n  onRowChangesChange: PropTypes.func,\n\n  deletedRowIds: PropTypes.array,\n  defaultDeletedRowIds: PropTypes.array,\n  onDeletedRowIdsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnExtensions: undefined,\n\n  editingRowIds: undefined,\n  defaultEditingRowIds: [],\n  onEditingRowIdsChange: undefined,\n\n  rowChanges: undefined,\n  defaultRowChanges: {},\n  onRowChangesChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRowIds: undefined,\n  defaultDeletedRowIds: [],\n  onDeletedRowIdsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.currentPage || props.defaultCurrentPage,\n      pageSize: props.pageSize !== undefined ? props.pageSize : props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        currentPage: () => this.props.onCurrentPageChange,\n        pageSize: () => this.props.onPageSizeChange,\n      },\n    );\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      currentPage,\n      pageSize,\n    } = nextProps;\n    this.setState({\n      ...currentPage !== undefined ? { currentPage } : null,\n      ...pageSize !== undefined ? { pageSize } : null,\n    });\n  }\n  render() {\n    const { pageSize, currentPage } = this.state;\n\n    return (\n      <Plugin\n        name=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </Plugin>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import React from 'react';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { paginatedRows, rowsWithPageHeaders, pageCount, rowCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst clamp = (value, max) => Math.max(Math.min(value, max), 0);\n\nconst rowsWithHeadersComputed = ({ rows, pageSize, getRowLevelKey }) =>\n  rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = ({ rows, pageSize, currentPage }) =>\n  paginatedRows(rows, pageSize, currentPage);\nconst currentPageComputed = ({ currentPage, totalCount, pageSize }, { setCurrentPage }) => {\n  const totalPages = pageCount(totalCount, pageSize);\n  const adjustedCurrentPage = clamp(currentPage, totalPages - 1);\n  if (currentPage !== adjustedCurrentPage) {\n    setTimeout(() => setCurrentPage(adjustedCurrentPage));\n  }\n  return adjustedCurrentPage;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </Plugin>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  changeColumnGrouping,\n  toggleExpandedGroups,\n  draftColumnGrouping,\n  cancelColumnGroupingDraft,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst dependencies = [\n  { name: 'SortingState', optional: true },\n];\n\nconst adjustSortIndex = (sortIndex, grouping, sorting) =>\n  Math.max(\n    grouping.slice(0, sortIndex).reduce(\n      (acc, columnGrouping) => {\n        const columnSortingIndex = sorting.findIndex(columnSorting =>\n          columnSorting.columnName === columnGrouping.columnName);\n        return (columnSortingIndex === -1 ? acc - 1 : acc);\n      },\n      sortIndex,\n    ),\n    0,\n  );\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping || props.defaultGrouping,\n      draftGrouping: null,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        grouping: () => this.props.onGroupingChange,\n        expandedGroups: () => this.props.onExpandedGroupsChange,\n      },\n    );\n\n    this.changeColumnGrouping = this.changeColumnGrouping.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftColumnGrouping = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftColumnGrouping);\n    this.cancelColumnGroupingDraft = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelColumnGroupingDraft);\n    this.changeColumnSorting = this.changeColumnSorting.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      grouping,\n      expandedGroups,\n    } = nextProps;\n    this.setState({\n      ...grouping !== undefined ? { grouping } : null,\n      ...expandedGroups !== undefined ? { expandedGroups } : null,\n    });\n  }\n  changeColumnSorting(\n    { columnName, keepOther, ...restParams },\n    { sorting },\n    { changeColumnSorting },\n  ) {\n    const { grouping } = this.state;\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      changeColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    changeColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n  changeColumnGrouping({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      changeColumnGrouping,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { changeColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        changeColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n  render() {\n    const { grouping, draftGrouping, expandedGroups } = this.state;\n\n    return (\n      <Plugin\n        name=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping || grouping} />\n        <Action name=\"changeColumnGrouping\" action={this.changeColumnGrouping} />\n        <Action name=\"draftColumnGrouping\" action={this.draftColumnGrouping} />\n        <Action name=\"cancelColumnGroupingDraft\" action={this.cancelColumnGroupingDraft} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName =>\n      getColumnExtension(columnExtensions, columnName).criteria;\n\n    const groupedRowsComputed = ({ rows, grouping, getCellValue }) =>\n      groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <Plugin\n        name=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) =>\n  customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = ({ rows, grouping }) =>\n      customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <Plugin\n        name=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={appliedExpandedGroups} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleSelection } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.selection || props.defaultSelection,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        selection: () => this.props.onSelectionChange,\n      },\n    );\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', toggleSelection);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      selection,\n    } = nextProps;\n    this.setState({\n      ...selection !== undefined ? { selection } : null,\n    });\n  }\n  render() {\n    const { selection } = this.state;\n\n    return (\n      <Plugin\n        name=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={selection} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: [],\n  onSelectionChange: undefined,\n};\n","import React from 'react';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  rowsWithAvailableToSelect,\n  someSelected,\n  allSelected,\n  unwrapSelectedRows,\n} from '@devexpress/dx-grid-core';\n\nconst rowsWithAvailableToSelectComputed = ({ rows, getRowId, isGroupRow }) =>\n  rowsWithAvailableToSelect(rows, getRowId, isGroupRow);\nconst allSelectedComputed = ({ rows, selection }) =>\n  allSelected(rows, selection);\nconst someSelectedComputed = ({ rows, selection }) =>\n  someSelected(rows, selection);\nconst selectAllAvailableComputed = ({ rows: { availableToSelect } }) =>\n  !!availableToSelect.length;\nconst toggleSelectAll = (state, { rows: { availableToSelect } }, { toggleSelection }) => {\n  toggleSelection({ rowIds: availableToSelect, state });\n};\nconst unwrapRowsComputed = ({ rows }) => unwrapSelectedRows(rows);\n\nconst pluginDependencies = [\n  { name: 'SelectionState' },\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedSelection extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithAvailableToSelectComputed} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" computed={selectAllAvailableComputed} />\n        <Action name=\"toggleSelectAll\" action={toggleSelectAll} />\n        <Getter name=\"rows\" computed={unwrapRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeColumnSorting } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.sorting || props.defaultSorting,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        sorting: () => this.props.onSortingChange,\n      },\n    );\n\n    this.changeColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, changeColumnSorting);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      sorting,\n    } = nextProps;\n    this.setState({\n      ...sorting !== undefined ? { sorting } : null,\n    });\n  }\n  render() {\n    const { sorting } = this.state;\n\n    return (\n      <Plugin\n        name=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName =>\n      getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) =>\n      sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n  tableHeaderRowsWithReordering(tableHeaderRows);\n\nexport class TableColumnReordering extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n  getState() {\n    const {\n      order = this.state.order,\n    } = this.props;\n    return {\n      ...this.state,\n      order,\n    };\n  }\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n  storeCellDimensionsGetter(tableColumn, data) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = data;\n    }\n  }\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = ({ tableColumns }) =>\n      orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <Plugin\n        name=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Cell\n              {...params}\n              getCellDimensions={fn =>\n                this.storeCellDimensionsGetter(params.tableColumn, fn)}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnReordering.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReordering.defaultProps = {\n  order: undefined,\n  defaultOrder: [],\n  onOrderChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  isNoDataTableRow,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) =>\n  tableRowsWithDataRows(rows, getRowId);\n\nconst pluginDependencies = [\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class Table extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ columns }) =>\n      tableColumnsWithDataRows(columns, columnExtensions);\n\n    return (\n      <Plugin\n        name=\"Table\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({ tableHeaderRows: headerRows, tableBodyRows: bodyRows, tableColumns: columns }) => (\n              <Layout\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {({ tableHeaderRows: headerRows }) =>\n                (isHeaderStubTableCell(params.tableRow, headerRows)\n                  ? <StubHeaderCell {...params} />\n                  : <StubCell {...params} />\n                )\n              }\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataCell {...{ getMessage, ...params }} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.object,\n};\n\nTable.defaultProps = {\n  columnExtensions: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <Plugin\n        name=\"TableSelection\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SelectionState' },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick\n                    selected={highlightRow && selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </Plugin>\n    );\n  }\n}\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleDetailRowExpanded } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => this.props.onExpandedRowIdsChange,\n      },\n    );\n\n    this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleDetailRowExpanded);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      expandedRowIds,\n    } = nextProps;\n    this.setState({\n      ...expandedRowIds !== undefined ? { expandedRowIds } : null,\n    });\n  }\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"RowDetailState\"\n      >\n        <Getter name=\"expandedDetailRowIds\" value={expandedRowIds} />\n        <Action name=\"toggleDetailRowExpanded\" action={this.toggleDetailRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = ({ tableBodyRows, expandedDetailRowIds }) =>\n      tableRowsWithExpandedDetail(tableBodyRows, expandedDetailRowIds, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedDetailRowIds }, { toggleDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedDetailRowIds, params.tableRow.rowId)}\n                  onToggle={() => toggleDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Cell\n              {...params}\n              row={params.tableRow.row}\n            >\n              <Content row={params.tableRow.row} />\n            </Cell>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplatePlaceholder, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = ({ tableBodyRows, isGroupRow }) =>\n  tableRowsWithGrouping(tableBodyRows, isGroupRow);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) =>\n      tableColumnsWithGrouping(\n        columns,\n        tableColumns,\n        grouping,\n        draftGrouping,\n        indentColumnWidth,\n        showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n      );\n\n    return (\n      <Plugin\n        name=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedGroups }, { toggleGroupExpanded }) => (\n                <TemplatePlaceholder\n                  name=\"valueFormatter\"\n                  params={{\n                    column: params.tableColumn.column,\n                    value: params.tableRow.row.value,\n                  }}\n                >\n                  {content => (\n                    <GroupCell\n                      {...params}\n                      row={params.tableRow.row}\n                      column={params.tableColumn.column}\n                      expanded={expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1}\n                      onToggle={() =>\n                        toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })}\n                    >\n                      {content}\n                    </GroupCell>\n                  )}\n                </TemplatePlaceholder>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        {GroupIndentCell && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isGroupIndentTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <GroupIndentCell\n                {...params}\n                row={params.tableRow.row}\n                column={params.tableColumn.column}\n              />\n            )}\n          </Template>\n        )}\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  getMessagesFormatter,\n  TABLE_DATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"TableHeaderRow\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SortingState', optional: !showSortingControls },\n          { name: 'GroupingState', optional: !showGroupingControls },\n          { name: 'DragDropProvider', optional: true },\n          { name: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting, tableColumns, draggingEnabled, tableColumnResizingEnabled,\n              }, {\n                changeColumnSorting, changeColumnGrouping,\n                changeTableColumnWidth, draftTableColumnWidth, cancelTableColumnWidthDraft,\n              }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    showSortingControls={showSortingControls && sorting !== undefined}\n                    showGroupingControls={showGroupingControls && atLeastOneDataColumn}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    sortingDirection={showSortingControls && sorting !== undefined\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    onSort={({ direction, keepOther }) =>\n                      changeColumnSorting({ columnName, direction, keepOther })}\n                    onGroup={() => changeColumnGrouping({ columnName })}\n                    onWidthChange={({ shift }) => changeTableColumnWidth({ columnName, shift })}\n                    onWidthDraft={({ shift }) => draftTableColumnWidth({ columnName, shift })}\n                    onWidthDraftCancel={() => cancelTableColumnWidthDraft()}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableFilterRow extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n      tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ filters }, { changeColumnFilter }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => changeColumnFilter({ columnName, config });\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : null,\n                      onValueChange: newValue => onFilter(newValue ? { value: newValue } : null),\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        onFilter={onFilter}\n                      >\n                        {content}\n                      </FilterCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  messages: PropTypes.object,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = ({ tableBodyRows, editingRowIds, addedRows }) =>\n      tableRowsWithEditing(tableBodyRows, editingRowIds, addedRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue, createRowChange, rowChanges }, { changeAddedRow, changeRow }) => {\n                const { rowId, row } = params.tableRow;\n                const { name: columnName } = params.tableColumn.column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(rowChanges, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={params.tableColumn.column}\n                        value={value}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n];\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <Plugin\n        name=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.object,\n};\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Getter, Action } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  changeTableColumnWidth,\n  draftTableColumnWidth,\n  cancelTableColumnWidthDraft,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.columnWidths || props.defaultColumnWidths,\n      draftColumnWidths: [],\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        columnWidths: () => this.props.onColumnWidthsChange,\n      },\n    );\n\n    this.changeTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, changeTableColumnWidth);\n    this.draftTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, draftTableColumnWidth);\n    this.cancelTableColumnWidthDraft =\n      stateHelper.applyReducer.bind(stateHelper, cancelTableColumnWidthDraft);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      columnWidths,\n    } = nextProps;\n    this.setState({\n      ...columnWidths !== undefined ? { columnWidths } : null,\n    });\n  }\n  render() {\n    const { columnWidths, draftColumnWidths } = this.state;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithWidths(tableColumns, columnWidths, draftColumnWidths);\n\n    return (\n      <Plugin\n        name=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Action name=\"changeTableColumnWidth\" action={this.changeTableColumnWidth} />\n        <Action name=\"draftTableColumnWidth\" action={this.draftTableColumnWidth} />\n        <Action name=\"cancelTableColumnWidthDraft\" action={this.cancelTableColumnWidthDraft} />\n      </Plugin>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.array,\n  columnWidths: PropTypes.array,\n  onColumnWidthsChange: PropTypes.func,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: [],\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nexport class GroupingPanel extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n      return (\n        <TemplateConnector>\n          {({ sorting }, { changeColumnGrouping, changeColumnSorting }) => (\n            <Item\n              item={item}\n              showSortingControls={showSortingControls && sorting !== undefined}\n              sortingDirection={sorting !== undefined\n                ? getColumnSortingDirection(sorting, columnName) : undefined}\n              showGroupingControls={showGroupingControls}\n              onGroup={() => changeColumnGrouping({ columnName })}\n              onSort={({ direction, keepOther }) =>\n                changeColumnSorting({ columnName, direction, keepOther })}\n            />\n          )}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={[\n          { name: 'GroupingState' },\n          { name: 'Toolbar' },\n          { name: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, grouping, draftGrouping, draggingEnabled,\n            }, {\n              changeColumnGrouping, draftColumnGrouping, cancelColumnGroupingDraft,\n            }) => (\n              <Layout\n                items={groupingPanelItems(columns, grouping, draftGrouping)}\n                draggingEnabled={draggingEnabled}\n                onGroup={changeColumnGrouping}\n                onGroupDraft={draftColumnGrouping}\n                onGroupDraftCancel={cancelColumnGroupingDraft}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGroupingPanel.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanel.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Template } from '@devexpress/dx-react-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n    } = this.props;\n    return (\n      <Plugin name=\"DataTypeProvider\">\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </Plugin>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Action,\n  Getter,\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter, toggleColumn, visibleTableColumns, tableDataColumnsExist } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst visibleTableColumnsComputed = ({ tableColumns, hiddenColumnNames }) =>\n  visibleTableColumns(tableColumns, hiddenColumnNames);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumnNames: props.hiddenColumnNames || props.defaultHiddenColumnNames,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        hiddenColumnNames: () => this.props.onHiddenColumnNamesChange,\n      },\n    );\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', toggleColumn);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      hiddenColumnNames,\n    } = nextProps;\n    this.setState({\n      ...hiddenColumnNames !== undefined ? { hiddenColumnNames } : null,\n    });\n  }\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { hiddenColumnNames } = this.state;\n\n    return (\n      <Plugin\n        name=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumnNames\" value={hiddenColumnNames} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) =>\n                (tableDataColumnsExist(tableColumns)\n                ? <TemplatePlaceholder />\n                : <EmptyMessage\n                  getMessage={getMessage}\n                  {...params}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnNamesChange: PropTypes.func,\n  messages: PropTypes.object,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumnNames: undefined,\n  defaultHiddenColumnNames: [],\n  onHiddenColumnNamesChange: undefined,\n  messages: {},\n};\n","/* globals requestAnimationFrame */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n} from '@devexpress/dx-grid-core';\n\nconst TABLE_FLEX_TYPE = 'flex';\n\nconst areColumnsChanged = (prevColumns, nextColumns) => {\n  if (prevColumns.length !== nextColumns.length) return true;\n  const prevKeys = prevColumns.map(column => column.key);\n  return nextColumns.find(column =>\n    prevKeys.indexOf(column.key) === -1) !== undefined;\n};\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.tableNode = null;\n\n    this.setRef = (ref) => { if (ref) this.tableNode = ref; };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { columns: nextColumns } = nextProps;\n    const { columns } = this.props;\n\n    if (areColumnsChanged(columns, nextColumns)) return;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const tableWidth = findDOMNode(this).scrollWidth;\n    this.animations = getAnimations(columns, nextColumns, tableWidth, this.animations);\n    this.processAnimationFrame();\n  }\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE, type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n  processAnimationFrame() {\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (this.state.animationState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n\n    requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        columns={columns}\n        minWidth={minWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTableRowColumnsWithColSpan } from '@devexpress/dx-grid-core';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          getTableRowColumnsWithColSpan(columns, row.colSpanStart)\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={column.colSpan}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","const OVERSCAN = 3;\n\nexport const STUB_TYPE = 'stub';\nconst VISIBLE_TYPE = 'visible';\nconst OVERSCAN_TYPE = 'overscan';\n\nconst STARTING_KEY = 'starting';\nconst ENDING_KEY = 'ending';\n\nexport const getVisibleRows = (rows, viewportTop, viewportHeight, getRowHeight) => {\n  const result = [];\n\n  const viewportBottom = viewportTop + viewportHeight;\n  let topPosition = 0;\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const lastIndex = result.length - 1;\n    const last = result[lastIndex];\n\n    const height = getRowHeight(row);\n    const bottomPosition = topPosition + height;\n    if (\n      (topPosition >= viewportTop && topPosition < viewportBottom) ||\n      (bottomPosition > viewportTop && bottomPosition <= viewportBottom) ||\n      (topPosition < viewportTop && bottomPosition > viewportBottom)\n    ) {\n      if (last && last.type === STUB_TYPE) {\n        rows.slice(Math.max(0, i - OVERSCAN), i).forEach((overscanRow) => {\n          const overscanRowSize = getRowHeight(overscanRow);\n          last.height -= overscanRowSize;\n          result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n        });\n        if (last.height === 0) {\n          result.splice(lastIndex, 1);\n        }\n      }\n      result.push({ type: VISIBLE_TYPE, height, row });\n    } else if (last && last.type === STUB_TYPE) {\n      last.height += height;\n    } else if (i > 0) {\n      rows.slice(i, i + OVERSCAN).forEach((overscanRow) => {\n        const overscanRowSize = getRowHeight(overscanRow);\n        result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n      });\n      i += OVERSCAN - 1;\n      if (i < rows.length) {\n        result.push({ type: STUB_TYPE, key: ENDING_KEY, height: 0 });\n      }\n    } else {\n      result.push({ type: STUB_TYPE, key: STARTING_KEY, height });\n    }\n    topPosition = bottomPosition;\n  }\n\n  return result;\n};\n\nconst getRowPosition = (visibleRows, index) => visibleRows\n  .slice(0, index)\n  .reduce((acc, row) => acc + row.height, 0);\n\nexport const firstVisibleRowOffset = (prevVisibleRows, visibleRows) => {\n  const firstVisibleRowIndex = visibleRows.findIndex(row => row.type === VISIBLE_TYPE);\n  if (firstVisibleRowIndex === -1) return 0;\n\n  const firstVisibleRow = visibleRows[firstVisibleRowIndex].row;\n  const prevIndex = prevVisibleRows.findIndex(row => row.row === firstVisibleRow);\n  if (prevIndex === -1) return 0;\n\n  const position = getRowPosition(visibleRows, firstVisibleRowIndex);\n  const prevPosition = getRowPosition(prevVisibleRows, prevIndex);\n  return position - prevPosition;\n};\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowLayout } from './row-layout';\nimport {\n  getVisibleRows,\n  firstVisibleRowOffset,\n} from './virtual-table-utils';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rowHeights: new Map(),\n      viewportTop: 0,\n    };\n\n    this.rowRefs = new Map();\n    this.updateViewport = this.updateViewport.bind(this);\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n  }\n  componentDidMount() {\n    this.storeRowHeights();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.headerRows !== nextProps.headerRows ||\n      this.props.rows !== nextProps.rows\n    ) {\n      const { rowHeights: prevRowHeight } = this.state;\n      this.setState({\n        rowHeights: [...nextProps.headerRows, ...nextProps.rows].reduce(\n          (acc, row) => {\n            const rowHeight = prevRowHeight.get(row.key);\n            if (rowHeight !== undefined) {\n              acc.set(row.key, rowHeight);\n            }\n            return acc;\n          },\n          new Map(),\n        ),\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.storeRowHeights();\n  }\n  getRowHeight(row) {\n    const storedHeight = this.state.rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return this.props.estimatedRowHeight;\n  }\n  getVisibleRows({ rows, headerRows, height } = this.props, top = this.state.viewportTop) {\n    const headHeight = headerRows.reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    return getVisibleRows(rows, top, height - headHeight, this.getRowHeight);\n  }\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref).getBoundingClientRect().height])\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const prevVisibleBodyRows = this.getVisibleRows();\n\n      const { rowHeights } = this.state;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      this.setState({\n        rowHeights,\n      });\n\n      const visibleBodyRows = this.getVisibleRows();\n      const scrollOffset = firstVisibleRowOffset(prevVisibleBodyRows, visibleBodyRows);\n      if (scrollOffset !== 0) {\n        // eslint-disable-next-line react/no-find-dom-node\n        findDOMNode(this).scrollTop += scrollOffset;\n      }\n    }\n  }\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n  updateViewport(e) {\n    const node = e.target;\n\n    // NOTE: prevent iOS to flicker in bounces\n    if (node.scrollTop < 0 ||\n      node.scrollLeft < 0 ||\n      node.scrollLeft + node.clientWidth > node.scrollWidth ||\n      node.scrollTop + node.clientHeight > node.scrollHeight) {\n      return;\n    }\n\n    if (this.viewportTop !== node.scrollTop) {\n      this.setState({\n        viewportTop: node.scrollTop,\n      });\n    }\n  }\n  render() {\n    const {\n      headerRows, columns,\n      minWidth, height,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      rowComponent, cellComponent,\n    } = this.props;\n    const visibleBodyRows = this.getVisibleRows();\n\n    return (\n      <Container\n        style={{ height: `${height}px` }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && (\n          <HeadTable\n            style={{ minWidth: `${minWidth}px` }}\n          >\n            <ColumnGroup columns={columns} />\n            <Head>\n              {headerRows.map(row => (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              ))}\n            </Head>\n          </HeadTable>\n        )}\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          <Body>\n            {visibleBodyRows.map((visibleRow) => {\n              if (visibleRow.type === 'stub') {\n                return (\n                  <tr key={visibleRow.key} style={{ height: `${visibleRow.height}px` }} />\n                );\n              }\n              const { row } = visibleRow;\n              return (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              );\n            })}\n          </Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      rows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n            />\n          )}\n          <RowsBlockLayout\n            rows={rows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n          />\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n    };\n  }\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragStart,\n      onDragEnd,\n    } = this.props;\n    const { dragging } = this.state;\n\n    const itemElement = <Item item={{ ...item, draft: dragging || item.draft }} />;\n\n    return (draggingEnabled ? (\n      <DragSource\n        payload={[{ type: 'column', columnName: item.column.name }]}\n        onStart={() => {\n          this.setState({ dragging: true });\n          onDragStart();\n        }}\n        onEnd={() => {\n          this.setState({ dragging: false });\n          onDragEnd();\n        }}\n      >\n        {itemElement}\n      </DragSource>\n    ) : (\n      itemElement\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragStart: () => {},\n  onDragEnd: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport {\n  getGroupCellTargetIndex,\n} from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onGroupDraft, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onGroupDraft } = this.props;\n      const { sourceColumnName } = this.state;\n      if (!this.draggingColumnName) {\n        this.resetState();\n        return;\n      }\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragStart = (columnName) => {\n      this.draggingColumnName = columnName;\n    };\n    this.onDragEnd = () => {\n      this.draggingColumnName = null;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n  resetState() {\n    const { onGroupDraftCancel } = this.props;\n    onGroupDraftCancel();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map(item => (\n          <ItemLayout\n            key={item.column.name}\n            ref={element => element && this.itemRefs.push(element)}\n            item={item}\n            itemComponent={Item}\n            draggingEnabled={draggingEnabled}\n            onDragStart={() => this.onDragStart(item.column.name)}\n            onDragEnd={this.onDragEnd}\n          />\n        ))}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={this.onEnter}\n          onOver={this.onOver}\n          onLeave={this.onLeave}\n          onDrop={this.onDrop}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onGroupDraft: PropTypes.func,\n  onGroupDraftCancel: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  onGroupDraft: () => {},\n  onGroupDraftCancel: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","rowIdGetter","cellValueGetter","React","PureComponent","propTypes","PropTypes","array","isRequired","func","defaultProps","undefined","Grid","children","oneOfType","arrayOf","node","pluginDependencies","name","ColumnChooser","state","handleToggle","bind","handleHide","buttonRef","button","setState","visible","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","hiddenColumnNames","toggleColumnVisibility","map","item","column","object","STATE_CONSISTENCY_TIMEOUT","createStateHelper","component","controlledStateProperties","stateConsistencyTimers","checkStateConsistency","propertyName","notifyStateChange","nextState","keys","forEach","changeEvent","setTimeout","lastStateUpdater","initialState","applyReducer","reduce","payload","callback","stateUpdater","prevState","stateChange","applyFieldReducer","field","FilteringState","filters","defaultFilters","stateHelper","onFiltersChange","changeColumnFilter","nextProps","IntegratedFiltering","columnExtensions","getColumnPredicate","getColumnExtension","columnName","predicate","rowsComputed","isGroupRow","getRowLevelKey","filteredRows","EditingState","editingRowIds","defaultEditingRowIds","addedRows","defaultAddedRows","rowChanges","defaultRowChanges","deletedRowIds","defaultDeletedRowIds","onEditingRowIdsChange","onAddedRowsChange","onRowChangesChange","onDeletedRowIdsChange","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changedRowsByIds","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","addedRowsByIds","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","createRowChange","createRowChangeGetter","PagingState","currentPage","defaultCurrentPage","pageSize","defaultPageSize","onCurrentPageChange","onPageSizeChange","setCurrentPage","setPageSize","number","clamp","value","max","Math","min","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","paginatedRows","currentPageComputed","totalCount","totalPages","pageCount","adjustedCurrentPage","IntegratedPaging","CustomPaging","dependencies","optional","adjustSortIndex","sortIndex","grouping","sorting","slice","acc","columnGrouping","columnSortingIndex","findIndex","columnSorting","GroupingState","defaultGrouping","expandedGroups","defaultExpandedGroups","onGroupingChange","onExpandedGroupsChange","changeColumnGrouping","toggleGroupExpanded","toggleExpandedGroups","draftColumnGrouping","cancelColumnGroupingDraft","changeColumnSorting","keepOther","restParams","groupingIndex","getters","actions","groupIndex","prevGrouping","prevGroupingIndex","length","draftGrouping","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","selection","defaultSelection","onSelectionChange","toggleSelection","rowsWithAvailableToSelectComputed","rowsWithAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","selectAllAvailableComputed","availableToSelect","toggleSelectAll","unwrapRowsComputed","unwrapSelectedRows","IntegratedSelection","SortingState","defaultSorting","onSortingChange","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","change","clientOffset","Column","columnComponent","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReordering","defaultOrder","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","order","getState","sourceColumnIndex","targetColumnIndex","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumn","data","TABLE_DATA_TYPE","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","tableColumns","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","fn","string","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","Table","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableColumnsComputed","tableColumnsWithDataRows","headerRows","bodyRows","tableBodyRows","isHeaderStubTableCell","isDataTableCell","row","isNoDataTableRow","isDataTableRow","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","select","isSelectTableCell","rowId","bool","RowDetailState","expandedRowIds","defaultExpandedRowIds","onExpandedRowIdsChange","toggleDetailRowExpanded","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","expandedDetailRowIds","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","tableRowsWithGrouping","showColumnWhenGroupedGetter","showColumnsWhenGrouped","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","isGroupTableRow","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","isHeadingTableCell","draggingEnabled","tableColumnResizingEnabled","changeTableColumnWidth","draftTableColumnWidth","cancelTableColumnWidthDraft","atLeastOneDataColumn","getColumnSortingDirection","direction","shift","isHeadingTableRow","TableFilterRow","FilterCell","FilterRow","tableHeaderRowsWithFilter","isFilterTableCell","getColumnFilterConfig","onFilter","config","newValue","isFilterTableRow","any","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isNew","isAddedTableRow","changedRow","getRowChange","onValueChange","changeArgs","isEditTableRow","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TableColumnResizing","columnWidths","defaultColumnWidths","onColumnWidthsChange","draftColumnWidths","tableColumnsWithWidths","PagingPanel","Pager","pageSizes","GroupingPanel","EmptyMessage","emptyMessageComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","editorComponent","includes","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumnNames","onHiddenColumnNamesChange","toggleColumn","tableDataColumnsExist","TABLE_FLEX_TYPE","areColumnsChanged","prevColumns","nextColumns","prevKeys","key","TableLayout","Map","animations","tableNode","setRef","ref","tableWidth","findDOMNode","scrollWidth","getAnimations","processAnimationFrame","animationState","result","isFixedWidth","push","size","has","get","filterActiveAnimations","evalAnimations","minColumnWidth","restProps","getColumns","minWidth","ColumnGroup","getColumnStyle","getRowStyle","height","RowLayout","colSpanStart","colSpan","OVERSCAN","STUB_TYPE","VISIBLE_TYPE","OVERSCAN_TYPE","STARTING_KEY","ENDING_KEY","getVisibleRows","viewportTop","viewportHeight","getRowHeight","viewportBottom","topPosition","i","lastIndex","last","bottomPosition","overscanRow","overscanRowSize","splice","getRowPosition","visibleRows","index","firstVisibleRowOffset","prevVisibleRows","firstVisibleRowIndex","firstVisibleRow","prevIndex","position","prevPosition","VirtualTableLayout","rowRefs","updateViewport","registerRowRef","storeRowHeights","prevRowHeight","rowHeights","set","storedHeight","estimatedRowHeight","top","headHeight","rowsWithChangedHeights","Array","from","entries","getBoundingClientRect","prevVisibleBodyRows","visibleBodyRows","scrollOffset","scrollTop","delete","e","target","scrollLeft","clientWidth","clientHeight","scrollHeight","HeadTable","headTableComponent","tableComponent","Head","headComponent","Body","bodyComponent","visibleRow","RowsBlockLayout","Block","blockComponent","StaticTableLayout","ItemLayout","onDragStart","onDragEnd","dragging","itemElement","draft","shape","GroupPanelLayout","onEnter","onGroupDraft","items","prevTargetItemIndex","targetItemIndex","itemGeometries","itemRefs","sourceItemIndex","getGroupCellTargetIndex","draggingColumnName","resetState","onGroup","onGroupDraftCancel","groupPanel","element","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent"],"mappings":"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"}